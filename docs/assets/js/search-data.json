{"0": {
    "doc": "Introduction",
    "title": "Geologically Realistic Representations of Seafloor Crustal Relief and Patchy Sediment Cover",
    "content": "Adam N. Price adamnicholasprice@gmail.com . July 2022 . | Geologically Realistic Representations of Seafloor Crustal Relief and Patchy Sediment Cover . | Adam N. Price adamnicholasprice@gmail.com . | July 2022 | . | . | Introduction . | Data and software requirements . | LaGriT | Paraview (optional) | Data files | Dockerfile | . | Document styling, commands, and files . | Document style | Commands | File types | . | Getting started | . | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/01_intro.html#geologically-realistic-representations-of-seafloor-crustal-relief-and-patchy-sediment-cover",
    "relUrl": "/01_intro.html#geologically-realistic-representations-of-seafloor-crustal-relief-and-patchy-sediment-cover"
  },"1": {
    "doc": "Introduction",
    "title": "Introduction",
    "content": "This tutorial is a resource that accompanies a robust set of resources including a publication, psuedo-code, GitHub repository, and data repository for constructing a three-dimensional grid of geologically realistic representations of seafloor crustal relief. The three-dimensional simulation domain described here has been used in multiple publications focusing on the thermal and hydrogeologic regime of coupled fluxes beneath a marine sediment pond (Price et al., 2022; Price et al., in-prep). The tutorial can be broken down into a workflow consisting of 5 main sections: constructing surfaces, constructing a domain, refining the domain, defining and assigning material types to regions, and a general clean-up of the domain. There will be two examples included for each step. One example will use a general case that will introduce the concepts in a simple manner and the other example will be for construction of the North Pond domain. This tutorial will not be an exhaustive tutorial on the functionality of LaGriT as there are many examples that can be found here. Instead, this tutorial will serve as walkthrough; that allows the user to understand the steps used in construction of this simulation domain using the lessons and approaches explained below. Happy gridding! . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/01_intro.html",
    "relUrl": "/01_intro.html"
  },"2": {
    "doc": "Introduction",
    "title": "Data and software requirements",
    "content": "To complete this tutorial you will need a stable version of LaGriT (version) and optionally Paraview. LaGriT . LaGriT is available at https://github.com/lanl/LaGriT/releases and can be downloaded as a compiled version (preferred) or the source code for compiling. After downloading LaGriT, add the file to a location within your path, and modify the file permissions to executable. Paraview (optional) . Paraview is a powerful visualization platform used for the primary grid viewer in this tutorial. Graphics here will be provided inline so there is no need to download for the purpose of this tutorial but it is recommended to explore the full functionality of this workflow. Paraview can be downloaded athttps://www.paraview.org/download/ . Data files . This tutorial utilizes scripts and data files from a github repository that can be found at https://github.com/adamnicholasprice/GeologicGriddingData. This repository can be cloned via the command line or downloaded directly from the github website. There are four directories: . • GeneralLaGriT - LaGriT scripts and csv surfaces for building the general grid case . • GeneralScene - Paraview scene files for general grid case used in this tutorial . • NorthPondLaGriT - LaGriT scripts and csv surfaces for building the North Pond grid case . • NorthPondScene - Paraview scene files for North Pond grid case used in this tutorial . Dockerfile . This tutorial is accompanied by a GitHub repository which includes a dockerfile that compiles LaGriT, clones this GitHub repo, and executes all gridding syntax to produce the geologically realistic grid described in this tutorial. Docker is a fairly easy program to use and takes away the issues of compiling LaGriT and “it works on your machine, but it won’t work on my machine”. If you have the time and knowledge, it is highly reccomended you use the dockerfile along with this tutorial. ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/01_intro.html#data-and-software-requirements",
    "relUrl": "/01_intro.html#data-and-software-requirements"
  },"3": {
    "doc": "Introduction",
    "title": "Document styling, commands, and files",
    "content": "Document style . Throughout the document italicized words willdenote either a file name or a variable within LaGrit. Code blocks will be denoted by the following style: . Code here # Comments will be denoted with an octothorpe (pound sign) . Commands . In lieu of repeating this code chunk in each of the following steps in the tutorial, any LaGriT input files (.lgi) that are run in the tutorial are done so by executing the following command in the command line: . lagrit &lt; filename . This will be denoted with the phrase execute filename.lgi in LaGriT. Steps within the tutorial will be broken down by LaGriT file and have necessary inputs and outputs specified as such: . | Filename | Input | Output | . | *filename.lgi | inputFilename | outputFilename | . File types . | Extension | Filetype | Purpose | . | _ *.lgi | LaGriT control file | LaGriT input control file, specifies mesh generation. | . | _ *.mlgi | LaGriT control file | LaGriT input control file used to specify a subroutine within *.lgi file. | . | _ *.inp | AVS UCD (Unstructured Cell Data) file | Created by LaGriT and contains information about mesh objects. Can be opened in Paraview to visualize data. | . | _ *.zone, *.area, *.stor, *.fehmn _ | FEHM files | LaGriT output files that are of general use but are specifically designed for theFEHM porous flow and transport code | . | _ outx3dgen | LaGriT output file | Output file containing commands and output from commands executed in LaGriT (overwritten every time LaGriT command is called) | . | _ legx3dgen | LaGriT log file | Log file containing commands executed in LaGriT (overwritten every time LaGriT command is called) | . | _ *.csv | Text file (comma separated values) | In this tutorial, these are text files containing coordinates in meters for surfaces. Columns are x, y, z coordinates respectively. | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/01_intro.html#document-styling-commands-and-files",
    "relUrl": "/01_intro.html#document-styling-commands-and-files"
  },"4": {
    "doc": "Introduction",
    "title": "Getting started",
    "content": "The first step in starting this tutorial is making sure that LaGriT is executable within the working directory of this tutorial and ensuring all needed materials have been synced from github. The directory structure should be: . GeologicGriddingData/ ├── GeneralLaGriT │ ├── 1_create_surface.lgi │ ├── 2_refine_domain.lgi │ ├── 3_set_region_truncate.lgi │ ├── refine_object.mlgi │ └── surface └── NorthPondLaGriT ├── 10_price_region_set.lgi ├── 11_price_remove_top.lgi ├── 12_price_top_region_set.lgi ├── 13_price_surf_aq300_bubbles.lgi ├── 14_price_aq300_set.lgi ├── 1_price_surf_domain.lgi ├── 2_middle_grid.csv ├── 2_price_surf_mid_grid.lgi ├── 3_middle_sb.csv ├── 3_price_surf_mid_sb.lgi ├── 4_price_surf_flat_zero.lgi ├── 5_price_surf_aq100.lgi ├── 6_price_surf_aq300_1k.lgi ├── 7_price_surf_filt.lgi ├── 8_price_driver_high_resolution_clipped.lgi ├── 9_price_surf_north_pond_seafloor.lgi └── function6 . Constructing refining surfaces . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/01_intro.html#getting-started",
    "relUrl": "/01_intro.html#getting-started"
  },"5": {
    "doc": "Constructing refining surfaces",
    "title": "Surfaces",
    "content": ". | Surfaces . | Generalized Mesh . | Overview | Syntax | Figures . | Figure 1 | . | . | North Pond . | Overview | Syntax . | Figure 3 | . | Overview | Syntax . | Figure 4 | . | Overview | Syntax . | Figure 5 | . | Overview | Syntax . | Figure 6 | . | Overview | Syntax . | Figure 7 | . | Overview | Syntax . | Figure 8 | . | Overview . | Figure 9 | . | . | Conclusion | . | . The first step in the construction of a simulation domain is to construct surfaces that represent geologically realistic layers. These surfaces will define boundaries that allow assignment of specific material properties and act as surfaces to refine the simulation domain. Surfaces can be constructed in LaGriT or in an outside programming language such as R, Python, or Matlab and brought into LaGritT. In both cases in this tutorial, surfaces were constructed outside of LaGriT and brought in to define mesh objects. The general steps to construct surfaces are: . | Save mesh coordinates (x,y,z) into a .csv file . | Create mesh object that has coordinate system (x and y) of desired mesh resolution (have to define if different from .csv file coordinates) . | Connect mesh objects with new coordinates in x and y. | Read in the .csv as a mesh object into LaGriT . | Copy over z-coordinates from mesh in step 4 to connected mesh in step 2 . | . This process forces LaGriT to make the “best” connections within an x-y plane to begin with and then the coordinates along the z-axis with relief to be defined, thereby preventing any connections outside the plane. ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/02_surfaces.html#surfaces",
    "relUrl": "/02_surfaces.html#surfaces"
  },"6": {
    "doc": "Constructing refining surfaces",
    "title": "Generalized Mesh",
    "content": "For the general case, there is one control file (.lgi), one input file (surface.lgi), and four output surfaces. | Filename | Input | Output | . | 1_create_surface.lgi | surface.csv | 1_surface_aq200.inp | . |   |   | 1_surface_aq800.inp | . |   |   | 1_surface_zero.inp | . |   |   | 1_surface.inp | . Overview . For the general case, surface.csv is the continuous function; . \\[z(x,y) = -cos(x) - cos(y)\\] that replicates, but generalizes topography associated with topographic relief and a topographic low. The maxima of the function would be representative of seamounts or hills, whereas the minima would represent sediment ponds or a sedimented valley bottom, both common features on the earths surface. Syntax . First, navigate to the directory for the general case (i.e. GeologicGriddingData/GeneralLaGriT) . Next, execute the .lgi file . lagrit &lt; 1_create_surface.lgi . Figures . Figure 1 . Interactive figure is made using the file 1_surface.inp in a program called Kitware Glance which is very useful for sharing and visualizing Paraview data. The surface is outlined by the eventual domain and shows the extent and relief of our initial surface. document.write(\"&lt;iframe src='\" + app + \"?name=\" + file + \"&amp;url=\" +datadir + file + \"' id='iframe' width='800' height='500'&gt;&lt;/iframe&gt;\"); &lt;/script&gt; #### Figure 2 All the surfaces output from _1_surface.inp_. Surfaces represent the upper most topography, layers at 200 and 800m below surface, and a surface at 0m. These surfaces will surface as boundaries for refinement as well as assigning materials to the simulation domain. ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/02_surfaces.html#generalized-mesh",
    "relUrl": "/02_surfaces.html#generalized-mesh"
  },"7": {
    "doc": "Constructing refining surfaces",
    "title": "North Pond",
    "content": "For the North Pond case, the first seven .lgi files define surfaces. The initial surface that represents the regional bathymetry of North Pond, was constructed outside of LaGriT in R. The details of sampling data for surface construction can be found in section 3 of this publication or in the supplimental information here Price et al., 2022. From samples of bathymetric data surrounding North Pond, a continuous function that best describes the region is: \\(z(x,y)= \\frac{1}{t}\\arctan\\left (\\frac{t*\\sin(x)}{1-t*\\cos(x)}\\right) - \\frac{1}{t}\\arctan\\left (\\frac{t*\\sin(y)}{1-t*\\cos(y)}\\right)\\) where t determines the “tilt” of the function, x is the strike-normal distance, and y is the strike-parallel distance. The inital surface is defined from -10 to 10 in the x and y directions. | Filename | Input | Output | . | 1_surf_domain.lgi | function6.csv | 1_surf_domain.inp | . Overview . Create mesh object surface representing North Pond bathymetry using function6.csv. The surface created above is brought into LaGriT and assigned a new coordinate system that assigns the correct slopes to the areas of interest. This new coordinate system is from -75 km to 75 km along-strike, -30 km to 30 km in the across-strike direction, with an amplitude of 600 m. Syntax . Navigate to the directory for the North Pond mesh case and . lagrit &lt; 1_surf_domain.lgi . Figure 3 . Inital North Pond surface with 4x vertical exaggeration . | Filename | Input | Output | . | 2_surf_mid_grid.lgi | 2_middle_grid.csv | 2_surf_mid_grid.inp | . Overview . Create mesh object surface from trimmed area of interest created from truncated bathymetric surface (2_middle_grid.csv) representing North Pond and immediately adjacent region. Syntax . lagrit &lt; 2_surf_mid_grid.lgi . Figure 4 . Surface 2_surf_mid_grid.inp, representing a subset of the inital surface above just in the area and immediately adjacent to North Pond with 4x vertical exaggeration. | Filename | Input | Output | . | 3_surf_mid_sb.lgi | 3_middle_sb.csv | 3_surf_mid_sb.inp | . Overview . Create mesh object surface from trimmed area of interest created from truncated bathymetric surface (3_middle_sb.csv ) representing sediment / basement interface beneath North Pond. Syntax . lagrit &lt; 3_surf_mid_sb.lgi . Figure 5 . Surface 3_surf_mid_sb.inp, representing the sediment-basement contact directly below the sedimented pond in North Pond with 4x vertical exaggeration . | Filename | Input | Output | . | 4_surf_flat_zero.lgi | None | 4_surf_flat_zero.inp | . Overview . Construct a flat surface at z = 0 at the same spatial extent as 2_middle_grid.csv just in the area of and immediately adjacent to North Pond. Syntax . lagrit &lt; 4_surf_flat_zero.lgi . Figure 6 . Surface 4_surf_flat_zero.inp, in the area of and immediately adjacent to North Pond. | Filename | Input | Output | . | 5_surf_aq100.lgi | 3_surf_mid_sb.inp | 5_surf_aq100.inp | . Overview . Construct a volume that represents a 100m thick aquifer section directly beneath the sediment-basement contact of North Pond with the same extent as 3_surf_mid_sb.inp . Syntax . lagrit &lt; 5_surf_aq100.lgi . Figure 7 . Volume 5_surf_aq100.inp, representing a 100m thick aquifer section below North Pond 10x vertical exaggeration. | Filename | Input | Output | . | 6_surf_aq300_1k.lgi | 2_surf_mid_grid.inp | 6_surf_aq300_1k.inp | . Overview . Construct a volume that represents a 900 m thick aquifer section from the base of the 100m thick aquifer to the base of the 1000m thick aquifer directly beneath and adjacent to the region representing North Pond. Syntax . lagrit &lt; 6_surf_aq300_1k.lgi . Figure 8 . Volume 6_surf_aq300_1k.inp, representing a 900m thick aquifer section 4x vertical exaggeration. | Filename | Input | Output | . | 7_surf_filt.lgi | 1_surf_domain.inp | 7_surf_filt_aq100.inp | . |   |   | 7_surf_filt_aq300.inp | . |   |   | 7_surf_filt_aq600.inp | . |   |   | 7_surf_filt_aq1k.inp | . Overview . Construct sufaces that represent the transitions from: . | aquifer 100 m thickness to 200 m thickness (7_surf_filt_aq100.inp) | aquifer 200 m thickness to 300 m thickness (7_surf_filt_aq300.inp) | aquifer 300 m thickness to 400 m thickness (7_surf_filt_aq600.inp) | aquifer 400 m thickness to 500 m thickness (7_surf_filt_aq1k.inp) . document.write(“&lt;iframe src='\" + app + \"?name=\" + file + \"&amp;url=\" +datadir + file + \"' id='iframe' width='800' height='500'&gt;&lt;/iframe&gt;”); &lt;/script&gt; . Figure 9 . Surfaces 7_surf_filt_aq100.inp (brown), 7_surf_filt_aq300.inp (tan),7_surf_filt_aq600.inp (light purple), and 7_surf_filt_aq1k.inp (dark purple) with 4x vertical exaggeration. | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/02_surfaces.html#north-pond",
    "relUrl": "/02_surfaces.html#north-pond"
  },"8": {
    "doc": "Constructing refining surfaces",
    "title": "Conclusion",
    "content": "Making surfaces to define material zones corresponding to stratigraphic sections and provide refinement boundaries is the most important and time consuming step in this process. The final figure shows the 10 surfaces and volumes constructed to define and refined the North Pond mesh. document.write(\"&lt;iframe src='\" + app + \"?name=\" + file + \"&amp;url=\" +datadir + file + \"' id='iframe' width='800' height='500'&gt;&lt;/iframe&gt;\"); &lt;/script&gt; #### Figure 10 All surfaces and volumes constructed for North Pond mesh. [Introduction](http://adamnicholasprice.github.io/GeologicGriddingTutorial/01_intro.html){: .btn .btn-purple } [Constructing and refining domain](http://adamnicholasprice.github.io/GeologicGriddingTutorial/03_domain.html){: .btn .btn-purple } . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/02_surfaces.html#conclusion",
    "relUrl": "/02_surfaces.html#conclusion"
  },"9": {
    "doc": "Constructing refining surfaces",
    "title": "Constructing refining surfaces",
    "content": " ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/02_surfaces.html",
    "relUrl": "/02_surfaces.html"
  },"10": {
    "doc": "Constructing and refining domain",
    "title": "Constructing and refining domain",
    "content": ". | Constructing and refining domain . | Generalized Mesh . | Overview | Syntax . | Figure 1 | . | . | . | North Pond . | Overview | Syntax . | Figure 4 | . | Conclusion | . | . The next step in constructing a mesh is to determine the size, shape, and type of elements that will make up the mesh. In both of the general case, we start with a retangular mesh composed of hexahedral elements with a course geometry. Next, we use the surfaces constructed in the last section to refine the mesh along boundaries of interest. This allows the mesh to have a nested structure that has a high-resolution area in the near-feild representing the geologic structure we are interested in simulating and lower-resolution in the far-feild. This nested feature also increases computational effeciency of numerical models used to simulate processes using the mesh. ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/03_domain.html",
    "relUrl": "/03_domain.html"
  },"11": {
    "doc": "Constructing and refining domain",
    "title": "Generalized Mesh",
    "content": "| Filename | Input | Output | . | 2_refine_domain.lgi | 1_surface_aq200.inp | 2_initial_domain.inp | . |   | 1_surface_aq800.inp | 2_hexRefine_octree.inp | . |   | 1_surface.inp | 2_surface_octree.inp | . |   |   | 2_surfaceAQ200_octree.inp | . |   |   | 2_surfaceAQ800_octree.inp | . Overview . For the general case, a rectangular mesh with dimensions 10km x 10km x 5km comprised of hexahedral elements resoultion of 1km x 1km x 1km is defined as the inital mesh. Next, the mesh is refined along the surfaces of interest using the following conditionals: . | One refiment step along the surface, 1_surface.inp (inital surface, top of domain) | Two refinement steps are performed along the surface 1_surface_aq200.inp (transition of the 200 m thick aquifer layer to the 800 m thick aquifer layer) | One refinement step along the surface 1_surface_aq800.inp (transition from the 800 m thick aquifer layer and the conductive boundary layer at the base of the domain) | . Syntax . lagrit &lt; 2_refine_domain.lgi . Figure 1 . Inital general case hexahedral mesh . document.write(\"&lt;iframe src='\" + app + \"?name=\" + file + \"&amp;url=\" +datadir + file + \"' id='iframe' width='800' height='500'&gt;&lt;/iframe&gt;\"); &lt;/script&gt; #### Figure 2 General domain slice at x=0, showing levels of refinement in areas of interest. ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/03_domain.html#generalized-mesh",
    "relUrl": "/03_domain.html#generalized-mesh"
  },"12": {
    "doc": "Constructing and refining domain",
    "title": "North Pond",
    "content": "| Filename | Input | Output | . | 8_price_driver_high_resolution_clipped.lgi | 1_surf_domain.inp | 8_inital_hex_domain.inp | . |   | 3_surf_mid_sb.inp | 8_1_octree_NP.inp | . |   | 4_surf_flat_zero.inp | 8_2_octree_aq100.inp | . |   | 5_surf_aq100.inp | 8_3_octree_aq300.inp | . |   | 6_surf_aq300_1k.inp | 8_4_octree_dom.inp | . |   | 7_surf_filt_aq100.inp | 8_4_octree_domaq100.inp | . |   | 7_surf_filt_aq300.inp | 8_5_octree_domaq1k.inp | . |   | 7_surf_filt_aq600.inp | 8_6_octree_domaq300.inp | . |   | 7_surf_filt_aq1k.inp | 8_7_octree_domaq600.inp | . |   |   | 8_hex_refine_octree.inp | . Overview . For North Pond, a rectangular mesh with 40km x 90km x 7.5km comprised of hexahedral elements with an inital resolution of 1km x 1km x 750m is defined. Refiment using the same subroutine as in the general case is used here with a much more sophisticated set of refinement conditionals. The following steps are taken in the refinement step: . | One refinement of elements intersecting surface 3_surf_mid_sb.inp (sediment-basement interface just in North Pond, the area of interest) | One refinement of elements intersecting volume 5_surf_aq100.inp (100 m thick aquifer from seafloor to 100m below surface just below North Pond) | Two refinements of elements intersecting volume 6_surf_aq300_1k.inp (900m thick aquifer layer from 100m below surface to 1000m below surface just below North Pond) | Two refinements of elements intersecting surface 1_surf_domain.inp (bathymetric relief and sediment basement contact the across the entire domain) | One refinement of elements with less than two refinements intersecting the volume 7_surf_filt_aq100.inp (transition from 100 m thick aquifer and 200 m thick aquifer just in North Pond) | One refinement of elements with less than two refinements intersecting the surface 7_surf_filt_aq1k.inp (transition from 1000 m thick aquifer and the conductive basement layer just in North Pond) | One refinement of elements with less than two refinements intersecting the surface 7_surf_filt_aq300.inp (transition from 200 m thick aquifer and 300 m thick aquifer layer just in North Pond) | One refinement of elements with less than two refinements intersecting the surface 7_surf_filt_aq600.inp (transition from 300 m thick aquifer and 400 m thick aquifer layer just in North Pond) | One refinement of elements with less than four refinements intersecting the surface 2_surf_mid_grid.inp (bathymetric relief and sediment basement contact just in and adjacent to North Pond) | . Syntax . lagrit &lt; 8_driver_high_resolution_clipped.lgi . Figure 4 . Inital North Pond hexahedral mesh . document.write(\"&lt;iframe src='\" + app + \"?name=\" + file + \"&amp;url=\" +datadir + file + \"' id='iframe' width='800' height='500'&gt;&lt;/iframe&gt;\"); &lt;/script&gt; #### Figure 5 Refined North Pond mesh subset at x = -6000m, colored by cell refinement level. ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/03_domain.html#north-pond",
    "relUrl": "/03_domain.html#north-pond"
  },"13": {
    "doc": "Constructing and refining domain",
    "title": "Conclusion",
    "content": "Now that we have a mesh that has the correct resolutions in the near- and far-feild, we will move on to defining material zones. Constructing refining surfaces Define regions and assign materials . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/03_domain.html#conclusion",
    "relUrl": "/03_domain.html#conclusion"
  },"14": {
    "doc": "Define regions and assign materials",
    "title": "Define regions and assign materials",
    "content": ". | Define regions and assign materials . | Generalized Mesh . | Overview | Syntax | Set zones . | Figure 1 | . | Convert to tetrahedral mesh and remove excess simulation domain | Reset top zone of domain | . | North Pond . | Overview | Syntax | Set zones . | Figure 4 | . | Convert to tetrahedral mesh and remove excess simulation domain | Syntax . | Figure 5 | . | Reset top zone of domain | Syntax . | Figure 6 | . | . | Conclusion | . | . Next, using the surfaces and volumes constructed in the previous steps, we define material zones that correspond to stratigraphic units of interest in our mesh. Defining zones in this way, allows the user to assign physical properties, boundary conditions, and query simulation outputs much easier that doing so element by element. ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/04_defineRegions.html",
    "relUrl": "/04_defineRegions.html"
  },"15": {
    "doc": "Define regions and assign materials",
    "title": "Generalized Mesh",
    "content": "| Filename | Input | Output | — | — | — | 3_set_region_truncate.lgi | 1_surface_aq200.inp | 3_hexDomain_defineZones.inp | | 1_surface_aq800.inp | 3_tetDomain_topConnected.inp| | 1_surface.inp | 3_tetDomain_regionSet.inp| | 1_surface_zero.inp | | 2_hexRefine_octree.inp| . Overview . In this step we set material zones, remove elements outside the area of interest, convert from hexahedral mesh to tetrahedral mesh, and ensure all zones are assigned correctly. Syntax . lagrit &lt; 8_driver_high_resolution_clipped.lgi . Set zones . For the general case, five zones are defined corresponding to the following surfaces based off the following conditionals: . | Zone 1: Represents a sediment zone, defined as less than or equal to the surface at z = 0 and greater than the initial cosine surface that defines the upper-most boundary of the domain. | Zone 2: Represents a 200 m thick aquifer section, defined as defined as less than or equal to the initial cosine surface that defines the upper-most boundary of the domain and greater than the surface representing the transition of the 200 m thick aquifer layer to the 600 m thick aquifer layer. | Zone 3: Represents a 600 m thick aquifer section, defined as less than or equal to the 200 m thick aquifer layer to the 600 m thick aquifer layer, and greater than the surface that represents the transition from the 600 m thick aquifer layer and the conductive boundary layer at the base of the domain. | Zone 4: Represents the conductive layer at the base of the domain, defined as less than the surface that represents the transition from the 600 m thick aquifer layer and the conductive boundary layer at the base of the domain. | Zone 5: Represents elements and points outside the mesh, defined as not belonging to zones 1-4 | . However, these zones must be set in the correct order because any subsquent assignment of zones overwrites previous assignments. Therefore the material zones are assigned in the following order: . | Zone 5 | Zone 1 | Zone 2 | Zone 3 | Zone 4 | . Figure 1 . General case hexahedral mesh colored by material zones assigned above . Convert to tetrahedral mesh and remove excess simulation domain . It is important to note that many pre- and post-processing tools have been developed to assign properities, query data, and assign inital conditions. As part of North Pond simulations (Price et al., 2022) we converted elements in the mesh from hexahedral to tetrahedral to allow use of pre- and post-processors developed for use with earlier simulations which can be found at this GitHub repository. the Since we started with a rectangular mesh but have refined our mesh to represent a topographic surface, we will remove any elements we do not want to simulation. In the above step, we set Zone 5 to represent this area of the mesh outside the area of interest. document.write(\"&lt;iframe src='\" + app + \"?name=\" + file + \"&amp;url=\" +datadir + file + \"' id='iframe' width='800' height='500'&gt;&lt;/iframe&gt;\"); &lt;/script&gt; #### Figure 2 General case hexahedral mesh with removal of elements outside the area of interest (top zone) . Reset top zone of domain . The final step is to correctly assign zones that represent the top, bottom, and side of the mesh. Since we removed the what was the top of the mesh in the previous step to reveal the refined topographic surface below, all the elements that were assigned as the top boundary no longer exist. We redefine the top zone of the mesh as elements belonging to the top zone and any material zone greater than one. document.write(\"&lt;iframe src='\" + app + \"?name=\" + file + \"&amp;url=\" +datadir + file + \"' id='iframe' width='800' height='500'&gt;&lt;/iframe&gt;\"); &lt;/script&gt; #### Figure 3 General case tetrahedral mesh with top material zone correctly defined with slice taken out at x,y = 0,0 . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/04_defineRegions.html#generalized-mesh",
    "relUrl": "/04_defineRegions.html#generalized-mesh"
  },"16": {
    "doc": "Define regions and assign materials",
    "title": "North Pond",
    "content": "| Filename | Input | Output | — | — | — | 11_region_set.lgi|8_hex_refine_octree.inp|11_hex_refine_octree.inp||1_surf_domain.inp|||4_surf_flat_zero.inp|||7_surf_filt_aq100.inp|||7_surf_filt_aq300.inp|||7_surf_filt_aq600.inp|||7_surf_filt_aq1k.inp|||3_surf_mid_sb.inp|||9_surf_north_pond_seafloor.inp|||10_surf_filt_mid_grid_aq100.inp|||10_surf_filt_mid_grid_aq300.inp|||10_surf_filt_mid_grid_aq600.inp|||10_surf_filt_mid_grid_aq1k.inp|| . Overview . Using the same steps as above we set material zones, remove elements outside the area of interest, and ensure all zones are assigned correctly for the North Pond mesh. Syntax . lagrit &lt; 11_region_set.lgi . Set zones . For the general case, five zones are defined corresponding to the following surfaces based off the following conditionals: . | Zone 1: Represents the sedimented pond of North Pond, defined as less than the seafloor surface (z=0) | Zone 2: 100 m thick aquifer layer adjacent but not including North Pond | Zone 3: 200 m thick aquifer layer adjacent but not including North Pond | Zone 4: 300 m thick aquifer layer adjacent but not including North Pond | Zone 5: 400 m thick aquifer layer adjacent but not including North Pond | Zone 6: Conductive basement layer adjacent but not including North Pond | Zone 7: 100 m thick aquifer layer immediately adjacent to and including North Pond | Zone 8: 200 m thick aquifer layer immediately adjacent to and including North Pond | Zone 9: 300 m thick aquifer layer immediately adjacent to and including North Pond | Zone 10: 400 m thick aquifer layer immediately adjacent to and including North Pond | Zone 11: Represents elements and points outside the mesh, defined as not belonging to zones 1-10 | . However, these zones must be set in the correct order because any subsquent assignment of zones overwrites previous assignments. Therefore the material zones are assigned in the following order: . | Zone 11 | Zone 1 | Zone 2 | Zone 3 | Zone 4 | Zone 5 | Zone 6 | Zone 7 | Zone 8 | Zone 9 | Zone 10 . document.write(“&lt;iframe src='\" + app + \"?name=\" + file + \"&amp;url=\" +datadir + file + \"' id='iframe' width='800' height='500'&gt;&lt;/iframe&gt;”); &lt;/script&gt; . Figure 4 . North Pond hexahedral mesh with material zones defined. 4x vertical exaggeration. | . | Filename | Input | Output | . | 12_remove_top.lgi | 11_hex_refine_octree.inp | 12_tmp_hex_mesh.inp | . |   |   | 12_tmp_tet_interp.inp | . Convert to tetrahedral mesh and remove excess simulation domain . As stated above, the first step is to convert the elements in the mesh from hexahedral to a tetrahedral for use with legacy tools. Since we started with a rectangular mesh but have refined our mesh to represent a topographic surface, we will remove any elements we do not want to simulation. In the above step, we set Zone 11 to represent this area of the mesh outside the area of interest. Syntax . lagrit &lt; 12_remove_top.lgi . Figure 5 . North Pond hexahedral mesh with top zone being removed. 4x vertical exaggeration. | Filename | Input | Output | . | 13_top_region_set.lgi | 12_tmp_tet_interp.inp | 13_tet_reset_final.inp | . |   | {fehm.files} |   | . Reset top zone of domain . The final step is to correctly assign zones that represent the top, bottom, and side of the mesh. Since we removed the what was the top of the mesh in the previous step to reveal the refined topographic surface below, all the elements that were assigned as the top boundary no longer exist. We redefine the top zone of the mesh as elements belonging to the top zone and any material zone greater than one. Additionally, we export files used in Finite Element Heat and Mass Transfer Code (FEHM). Syntax . lagrit &lt; 13_top_region_set.lgi . Figure 6 . North Pond tetrahedral mesh with top region set. 4x vertical exaggeration. ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/04_defineRegions.html#north-pond",
    "relUrl": "/04_defineRegions.html#north-pond"
  },"17": {
    "doc": "Define regions and assign materials",
    "title": "Conclusion",
    "content": "This concludes the walkthrough portion of the tutorial. The next pages will cover the final geolgic meshes, pseudo code for both cases and an executable roadmap for each case. Constructing and refining domain Final Mesh . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/04_defineRegions.html#conclusion",
    "relUrl": "/04_defineRegions.html#conclusion"
  },"18": {
    "doc": "Final mesh",
    "title": "Final mesh",
    "content": ". | Final mesh . | Final Generalized Mesh | North Pond . | First, . | Figure 1 | . | Second, . | Figure 2 | . | Finally, | . | Conclusion | . | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/05_finalMesh.html",
    "relUrl": "/05_finalMesh.html"
  },"19": {
    "doc": "Final mesh",
    "title": "Final Generalized Mesh",
    "content": "The general case mesh reproduces common topographic features with targeted refinement along areas of possible simulation intertest. This is a general case and therefore represents a proof of concept. document.write(\"&lt;iframe src='\" + app + \"?name=\" + file + \"&amp;url=\" +datadir + file + \"' id='iframe' width='800' height='500'&gt;&lt;/iframe&gt;\"); &lt;/script&gt; #### Figure 1 Final tetrahedral general case mesh &lt;script&gt; var app = \"https://kitware.github.io/paraview-glance/app\"; var datadir = \"https://raw.githubusercontent.com/adamnicholasprice/GeologicGriddingTutorial/main/GeneralScene/\"; var file = \"generalTetFinal.vtkjs\"; document.write(\"&lt;iframe src='\" + app + \"?name=\" + file + \"&amp;url=\" +datadir + file + \"' id='iframe' width='800' height='500'&gt;&lt;/iframe&gt;\"); &lt;/script&gt; #### Figure 2 Final tetrahedral general case mesh with cutaway showing topograpic low and material zones. ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/05_finalMesh.html#final-generalized-mesh",
    "relUrl": "/05_finalMesh.html#final-generalized-mesh"
  },"20": {
    "doc": "Final mesh",
    "title": "North Pond",
    "content": "The final North Pond mesh reproduces important characteristics that we sought to reproduce in the mesh. First, . A layered system with separate regions representing seafloor sediments, upper-volcanic crustal aquifer of varying thicknesses, and a lower volcanic unit of conductive crust. Using the aquifer thickness as a “free parameter” in numerical simulations, allows assignment of a thicker or thinner unit in order to better represent heat and fluid flux processes. Price et al., 2022. Figure 1 . North Pond mesh with layers represnting sediment, conductive basement, and aquifer layers with varying thickness. Second, . Geologic geometry that accurately represents the regional and local bathymetry relief. Which we see in the figure below, matches the wavelength and amplitude described in the accompanying publication and Price et al., 2022. document.write(\"&lt;iframe src='\" + app + \"?name=\" + file + \"&amp;url=\" +datadir + file + \"' id='iframe' width='800' height='500'&gt;&lt;/iframe&gt;\"); &lt;/script&gt; . Figure 2 . Final North Pond tetrahedral mesh. 4x vertical exaggeration. Finally, . Realistic geometry of the sedimented pond with varying sediment thicknesses, asymmetric slopes along the sediment / basement contacts, and sediment “pinchouts” or thinning sediments along the margins of the sedimented pond. document.write(\"&lt;iframe src='\" + app + \"?name=\" + file + \"&amp;url=\" +datadir + file + \"' id='iframe' width='800' height='500'&gt;&lt;/iframe&gt;\"); &lt;/script&gt; #### Figure Final North Pond tetrahedral mesh with sediment pond offset from aquifer layer to show assymetric slopes and sediment thickness. 4x vertical exaggeration. ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/05_finalMesh.html#north-pond",
    "relUrl": "/05_finalMesh.html#north-pond"
  },"21": {
    "doc": "Final mesh",
    "title": "Conclusion",
    "content": "Define regions and assign materials Pseudo code: General case . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/05_finalMesh.html#conclusion",
    "relUrl": "/05_finalMesh.html#conclusion"
  },"22": {
    "doc": "Pseudo code: General case",
    "title": "Pseudo code: General Case",
    "content": " ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoGeneral.html#pseudo-code-general-case",
    "relUrl": "/07_pseudoGeneral.html#pseudo-code-general-case"
  },"23": {
    "doc": "Pseudo code: General case",
    "title": "General files description",
    "content": "| Filename | File purpose | — | — |1_create_surface.lgi| Constructing reference surfaces|2_refine_domain.lgi|Mesh building and refinement|3_set_region_truncate.lgi|Setting material regions based on surfaces, hex-to-tet mesh, removing top of mesh, setting top most zone, cleaning up mesh| . | 1_create_surface.lgi | Overview . | Lines 1 - 6 | Lines 9 - 13 | Lines 16 - 21 | Lines 24 - 30 | Lines 34 - 54 | Lines 58 - 74 | File link: | . | 2_refine_domain.lgi | Overview . | Lines 2 - 14 | Lines 16 - 18 | Line 23 | Lines 24 - 27 | Lines 29 - 34 | Lines 36 - 40 | Lines 45 - 46 | . | Refine_object.mlgi | Overview . | Lines 1 - 2 | Line 4 | Line 5 | Line 6 | File link: | File link: | . | 3_set_region_truncate.lgi | Overview . | Line 1 | Lines 3 - 11 | Lines 13 - 14 | Lines 17 - 37 | Lines 39 - 43 | Line 45 - 49 | Line 52 - 60 | Line 63 - 64 | Line 67 - 70 | Line 73 - 78 | Line 81 | File link: | . | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoGeneral.html#general-files-description",
    "relUrl": "/07_pseudoGeneral.html#general-files-description"
  },"24": {
    "doc": "Pseudo code: General case",
    "title": "1_create_surface.lgi",
    "content": "| Input | Output | . | 2_middle_grid.csv | 2_surf_mid_grid.inp | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoGeneral.html#1_create_surfacelgi",
    "relUrl": "/07_pseudoGeneral.html#1_create_surfacelgi"
  },"25": {
    "doc": "Pseudo code: General case",
    "title": "Overview",
    "content": "Create all surfaces needed in construction, refinement, and material assignment of general case mesh. Lines 1 - 6 . Assign coordinate system in meters from xmin, ymin, zmin = -5000,-5000 to xmax, ymax = 5000,5000 and number of points in x,y = 201,201. Lines 9 - 13 . Create mesh object mo_surface that has the above x and y dimensions with z = 0 and connect the points in the surface . Lines 16 - 21 . Create mesh object surface_plane from surface surface.csv. Then copy over z coordinates from surface_plane to connected surface mo_surface . Lines 24 - 30 . Set properties assocaited with surface (mostly used for visualization in this case) and dump mesh object surface mo_surface to 1_surface.inp . Lines 34 - 54 . Create copies of mo_surface named mo_aq800 and mo_aq200. Subtract 200m and 800m from the z coordinate of surfaces mo_aq200 and mo_aq800; respectively. Set properties assocaited with surface, and dump mesh objects to files . | mo_aq200 to 1_surface_aq200.inp | mo_aq800 to 1_surface_aq800.inp | . Lines 58 - 74 . Create mesh object mo_zero at z = 0 with a two points in x and y with the same extent as specified above. Set properties assocaited with surface and dump mo_zero to file 1_surface_zero.inp. File link: . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoGeneral.html#overview",
    "relUrl": "/07_pseudoGeneral.html#overview"
  },"26": {
    "doc": "Pseudo code: General case",
    "title": "2_refine_domain.lgi",
    "content": "| Input | Output | . | 2_middle_grid.csv | 2_surf_mid_grid.inp | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoGeneral.html#2_refine_domainlgi",
    "relUrl": "/07_pseudoGeneral.html#2_refine_domainlgi"
  },"27": {
    "doc": "Pseudo code: General case",
    "title": "Overview",
    "content": "First, we create an inital hexahedral mesh. Next, we read in all the surfaces created in the previous files. Finally, the subroutine refine_object.mlgi is called to perform octree refinement along the elements intersected with the surfaces called and files are created for each of those refinement iterations. Lines 2 - 14 . Define xmin, ymin, zmin = -5000,-5000, -4000 to xmax, ymax, zmax = 5000,5000,1000 and number of points in x,y,z = 11,11,6. This sets the initial resolution at 1000m elements in x,y,z. Create the mesh object domain_hex and dump to file 2_initial_domain.inp. Lines 16 - 18 . Read in surfaces . | 1_surface.inp = mo_surface | 1_surface_aq200.inp = mo_aq200 | 1_surface_aq800.inp = mo_aq800 | . Line 23 . Define the initail hexahedral mesh domain_hex as the object to refine. Lines 24 - 27 . This series of lines performs the octree refinement and will be performed many times in this file. The flow of these lines are: . | Line 24: Define the mesh object to refine with. Here is mo_sb | Line 25: Perform octree refinement via the subroutine refine_object.mlgi | Line 26: Dump the refined object to a file. Here 2_surface_octree.inp | Line 27: Check the quality of the refinement. | . Henceforth, this series of steps will be denoted by: Refine {name of mesh object} - File: {Output file} . Lines 29 - 34 . Refine x2 mo_aq200 - File: 2_surfaceAQ200_octree.inp . Lines 36 - 40 . Refine mo_aq800 - File: 2_surfaceAQ800_octree.inp . Lines 45 - 46 . Reset the itetclr variable. Dump the refined mesh domain_hex to file 2_hexRefine_octree.inp . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoGeneral.html#overview-1",
    "relUrl": "/07_pseudoGeneral.html#overview-1"
  },"28": {
    "doc": "Pseudo code: General case",
    "title": "Refine_object.mlgi",
    "content": "| Input | Output | . | {Element to be refined} | {Refining element} | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoGeneral.html#refine_objectmlgi",
    "relUrl": "/07_pseudoGeneral.html#refine_objectmlgi"
  },"29": {
    "doc": "Pseudo code: General case",
    "title": "Overview",
    "content": "Subroutine used to perform octree refinement of a mesh object along a specified surface or volume . Lines 1 - 2 . Clear any variables from previous use of subroutine . Line 4 . Create a mesh object attribute named if_inter that contains the intersection of the mesh object being refined and the mesh object being used to refine in this step. These are defined outside the subroutine . Line 5 . Create an element set named erefine based on where if_inter is greater than 0 (i.e. where the meshes intersect) . Line 6 . The selected set, erefine, is refined. File link: . File link: . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoGeneral.html#overview-2",
    "relUrl": "/07_pseudoGeneral.html#overview-2"
  },"30": {
    "doc": "Pseudo code: General case",
    "title": "3_set_region_truncate.lgi",
    "content": "| Input | Output | . | 2_hexRefine_octree.inp | 3_hexDomain_defineZones.inp | . | 1_surface.inp | {outside zone files} | . | 1_surface_aq200.inp | 3_tetDomain_regionSet.inp | . | 1_surface_aq800.inp |   | . | 1_surface_zero.inp |   | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoGeneral.html#3_set_region_truncatelgi",
    "relUrl": "/07_pseudoGeneral.html#3_set_region_truncatelgi"
  },"31": {
    "doc": "Pseudo code: General case",
    "title": "Overview",
    "content": "Line 1 . Read in refined mesh 2_hexRefine_octree.inp as mesh object domain_hex . Lines 3 - 11 . Read in surfaces as sheet surfaces as follows: . | 1_surface.inp as sheet surface surf | 1_surface_aq200.inp as sheet surface s_aq200 | 1_surface_aq800.inp as sheet surface s_aq800 | 1_surface_zero.inp as sheet surface zero | . Lines 13 - 14 . Set attribute itetclr = 5 for mesh domain_hex . Lines 17 - 37 . This section details the intersecting of sheets above with the refined mesh object inorder to define individual zones that correspond to geologic units within the grid. The general workflow of this section takes example from Lines 33 - 35: . | Line 33 - Define the region of interest and name it r1 which is less than or equal to the sheet zero and greater than the surface surf. (surf &lt; r1 ≤ zero) | Line 34 - Define an eltset (element set), e_r1, from the region r1. | Line 35 - Set the itetclr attribut of domain_hex = 1 | . This process repeats for different conditions until line 37. The layers that correspond to the itetclr set in these lines are: . | 1 - Sediment | 2 - Aquifer layer 0 - 200m | 3 - Aquifer layer 200 - 800m | 4 - Conductive basement &lt; 800 m | 5 - Everything else (i.e., the area above the refined topographic surface) | . Lines 39 - 43 . Check the quality of domain_hex and dump to file 3_hexDomain_defineZones.inp . Line 45 - 49 . Convert hexahedral mesh domain_hex to tetrehedral mesh domain_tet for ease of use for legacy tools from UCSC hydrogeology lab GitHub . Line 52 - 60 . Reset imt and itp attributes for mesh domain_tet. Interpolate material regions from domain_hex to domain_tet. Dump mesh domain_tet to file 3_tetDomain_topConnected.inp . Line 63 - 64 . Remove material zone 5 corresponding to elements above refined topography. Line 67 - 70 . Reset attributes cell_color and itp. Check status of mesh . Line 73 - 78 . Dump outside zone files to read back in later steps. Select points with material zone (imt) greater than 1 and in the top zone for mesh domain_tet and set attribute imt to zone 2. Line 81 . Dump completed mesh domain_tet to file 3_tetDomain_regionSet.inp . File link: . Cleanup mesh, materials, and boundaries Pseudo code: North Pond . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoGeneral.html#overview-3",
    "relUrl": "/07_pseudoGeneral.html#overview-3"
  },"32": {
    "doc": "Pseudo code: General case",
    "title": "Pseudo code: General case",
    "content": " ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoGeneral.html",
    "relUrl": "/07_pseudoGeneral.html"
  },"33": {
    "doc": "Pseudo code: North Pond",
    "title": "Pseudo code: North Pond",
    "content": " ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html",
    "relUrl": "/07_pseudoNorthPond.html"
  },"34": {
    "doc": "Pseudo code: North Pond",
    "title": "General files description",
    "content": "| Filename | File purpose | — | — |1_surf_domain.lgi| Construct reference surfaces|2_surf_mid_grid.lgi|Construct reference surfaces|3_surf_mid_sb.lgi|Construct reference surfaces|4_surf_flat_zero.lgi|Construct reference surfaces|5_surf_aq100.lgi|Construct reference surfaces|6_surf_aq300_1k.lgi|Construct reference surfaces|7_surf_filt.lgi|Construct reference surfaces|8_driver_high_resolution_clipped.lgi| Mesh building and refinement|9_surf_north_pond_seafloor.lgi| Construct reference surfaces|10_surf_aq_volumes.lgi| Constructing reference volumes|11_region_set.lgi| Setting material regions based on surfaces/volumes |12_remove_top.lgi| Hex-to-tet mesh and removing top of mesh|13_top_region_set.lgi | Setting top most zone, cleaning up mesh, exporting FEHM files| . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#general-files-description",
    "relUrl": "/07_pseudoNorthPond.html#general-files-description"
  },"35": {
    "doc": "Pseudo code: North Pond",
    "title": "Files:",
    "content": " ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#files",
    "relUrl": "/07_pseudoNorthPond.html#files"
  },"36": {
    "doc": "Pseudo code: North Pond",
    "title": "Function6",
    "content": "Bathymetric function. ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#function6",
    "relUrl": "/07_pseudoNorthPond.html#function6"
  },"37": {
    "doc": "Pseudo code: North Pond",
    "title": "2_mid_grid.csv",
    "content": "Clipped bathymetry file representing North Pond and surrounding area. Used for high resolution filtering . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#2_mid_gridcsv",
    "relUrl": "/07_pseudoNorthPond.html#2_mid_gridcsv"
  },"38": {
    "doc": "Pseudo code: North Pond",
    "title": "3_middle_sb.csv",
    "content": "Clipped bathymetry file representing just the sediment = basement interface. | Files: . | Function6 | 2_mid_grid.csv | 3_middle_sb.csv | 1_surf_domain.lgi . | Overview | Lines 1 - 11 | Lines 14 - 18 | Lines 23-24 | Line 28 | Lines 32 - 37 | Lines 39 - 41 | File link: | . | 2_surf_mid_grid.lgi | Overview . | Lines 4 - 8 | Lines 10 - 14 | Lines 17 - 22 | Lines 26 - 28 | File link: | . | 3_surf_mid_sb.lgi | Overview . | Lines 4 - 8 | Lines 10 - 13 | Lines 17 - 22 | Lines 26 - 28 | File link: | . | 4_surf_flat_zero.lgi | Overview . | Lines 2 - 5 | Lines 7 - 9 | Lines 11 - 15 | Lines 17 - 18 | Lines 20 - 22 | File link: | . | 5_surf_aq100.lgi | Overview . | Line 1 | Line 4 | Line 6 | Lines 9 - 11 | Lines 13 - 15 | File link: | . | 6_surf_aq300_1k.lgi | Overview . | Lines 2 - 4 | Lines 6 - 8 | Lines 10 - 13 | Lines 15 - 17 | File link: | . | 7_surf_filt.lgi | Overview . | Line 1 | Lines 4 - 7 | Lines 12 - 15 | Lines 20 - 25 | File link: | . | 8_driver_high_resolution_clipped.lgi | Overview . | Lines 1 - 14 | Lines 17 - 25 | Line 28 | Lines 32 - 36 | Lines 40 - 43 | Lines 47 - 52 | Lines 57 - 60 | Lines 64 - 75 | Lines 79 - 91 | Lines 96 - 108 | Lines 112 - 126 | Lines 128 - 142 | Line 144 | Lines 146 - 151 | File link: | . | Overview . | Lines 1 - 2 | Line 4 | Line 5 | Line 6 | File link: | . | 9_surf_north_pond_seafloor.lgi | Overview . | Lines 4 - 8 | Lines 11 - 15 | Lines 19 - 21 | File link: | . | 10_surf_aq_volumes.lgi | Overview . | Line 2 | Lines 5 - 11 | Lines 13 - 28 | Lines 30 - 33 | Lines 35 - 38 | File link: | . | 11_region_set.lgi | Overview . | Lines 1 - 30 | Lines 33 - 34 | Lines 37 - 84 | Lines 89 - 97 | Line 99 | File link: | . | 12_remove_top.lgi | Overview . | Line 1 | Line 2 | Line 6 | Line 8 - 14 | Lines 18 - 19 | Lines 21 - 22 | Lines 26 - 27 | Lines 29 - 34 | File link: | . | 13_top_region_set.lgi | Overview . | Lines 1 - 4 | Line 6 | Lines 8 - 9 | Lines 11 - 15 | Lines 19 - 21 | Lines 23 - 24 | File link: | . | . | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#3_middle_sbcsv",
    "relUrl": "/07_pseudoNorthPond.html#3_middle_sbcsv"
  },"39": {
    "doc": "Pseudo code: North Pond",
    "title": "1_surf_domain.lgi",
    "content": "| Input | Output | . | function6 | 1_surf_domain.inp | . Overview . Create mesh object for bathymetric surface. Lines 1 - 11 . Assign coordinate system in meters from xmin, ymin, zmin = -30000,-75000, -5000 to xmax, ymax, zmax = 30000,75000,0 and number of points in x,y,z = 301, 301,6 to determine spacing. Lines 14 - 18 . Create a mesh object surface, mo_tri, that is the above x,y dimensions with singular z value (2D plane). Setting z coordinates to zero before connecting allows defining an explicit x,y coordinate system and connecting that surface without producing oddly shaped elements. Lines 23-24 . Creates mesh object (sedbase) from the topography function from R (function6) . Line 28 . Assign z coordinates from sedbase to connected triplane mesh object mo_tri . Lines 32 - 37 . Reset property values of mesh object to insure all the same value . Lines 39 - 41 . Dump surface to file 1_surf_domain.inp . File link: . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#1_surf_domainlgi",
    "relUrl": "/07_pseudoNorthPond.html#1_surf_domainlgi"
  },"40": {
    "doc": "Pseudo code: North Pond",
    "title": "2_surf_mid_grid.lgi",
    "content": "| Input | Output | . | 2_middle_grid.csv | 2_surf_mid_grid.inp | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#2_surf_mid_gridlgi",
    "relUrl": "/07_pseudoNorthPond.html#2_surf_mid_gridlgi"
  },"41": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Create mesh object from trimmed area of interest created from truncated bathymetric surface representing North Pond and immediately adjacent region created outside of LaGriT . Lines 4 - 8 . Read in 2_middle_grid.csv, create a mesh object (sedbase), set z coordinates to zero, then connect. Setting z coordinates to zero before connecting allows defining an explicit x,y coordinate system and connecting that surface without producing oddly shaped elements. Lines 10 - 14 . Read in 2_middle_grid.csv, create a separate mesh object temp, then copy z coordinates from temp to connected surface sedbase . Lines 17 - 22 . Reset property values of mesh object to insure all the same value . Lines 26 - 28 . Dump surface to file 2_surf_mid_grid.inp . File link: . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#overview-1",
    "relUrl": "/07_pseudoNorthPond.html#overview-1"
  },"42": {
    "doc": "Pseudo code: North Pond",
    "title": "3_surf_mid_sb.lgi",
    "content": "| Input | Output | — | — | 3_middle_sb.csv|3_surf_mid_sb.inp| . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#3_surf_mid_sblgi",
    "relUrl": "/07_pseudoNorthPond.html#3_surf_mid_sblgi"
  },"43": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Create mesh object from trimmed area of interest created from truncated bathymetric surface representing sediment = basement interface beneath North Pond created outside of LaGriT . Lines 4 - 8 . Read in 3_middle_sb.csv, create a mesh object (sedbase), set z coordinates to zero, then connect. Setting z coordinates to zero before connecting allows defining an explicit x,y coordinate system and connecting that surface without producing oddly shaped elements. Lines 10 - 13 . Read in 3_middle_sb.csv, create a separate mesh object (temp), then copy z coordinates from temp to connected surface sedbase . Lines 17 - 22 . Reset property values of mesh object to insure all the same value . Lines 26 - 28 . Dump surface to file 3_surf_mid_sb.inp . File link: . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#overview-2",
    "relUrl": "/07_pseudoNorthPond.html#overview-2"
  },"44": {
    "doc": "Pseudo code: North Pond",
    "title": "4_surf_flat_zero.lgi",
    "content": "| Input | Output | . | None | 4_surf_flat_zero.inp | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#4_surf_flat_zerolgi",
    "relUrl": "/07_pseudoNorthPond.html#4_surf_flat_zerolgi"
  },"45": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Construct a flat surface at z = 0 at the same spatial extent as 2_middle_grid.csv. Lines 2 - 5 . Specify extent of surface xmin, ymin = -15000, -6000 to xmax, ymax = 4600, 28500 . Lines 7 - 9 . Specify number of x,y points (resolution) at 2 each . Lines 11 - 15 . Create mesh object mo_tri, create points on that mesh object, and connect . Lines 17 - 18 . Check quality of connections for oddly shaped elements . Lines 20 - 22 . Dump mesh object mo_tri to file 4_surf_flat_zero.inp . File link: . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#overview-3",
    "relUrl": "/07_pseudoNorthPond.html#overview-3"
  },"46": {
    "doc": "Pseudo code: North Pond",
    "title": "5_surf_aq100.lgi",
    "content": "| Input | Output | — | — |3_surf_mid_sb.inp|5_surf_aq100.inp| . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#5_surf_aq100lgi",
    "relUrl": "/07_pseudoNorthPond.html#5_surf_aq100lgi"
  },"47": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Construct a volume that represents a 100m thick aquifer section directly beneath North Pond. Line 1 . Read in 3_surf_mid_sb.inp to mesh object mid_sb . Line 4 . Extrude a volume that goes from sediment = basement interface to 100m below that interface. Line 6 . Check the quality of the extrude . Lines 9 - 11 . Convert the volume from hexagonal elements to tetrahedral elements and check the quality of that conversion . Lines 13 - 15 . Dump mo_tet to file 5_surf_aq100.inp . File link: . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#overview-4",
    "relUrl": "/07_pseudoNorthPond.html#overview-4"
  },"48": {
    "doc": "Pseudo code: North Pond",
    "title": "6_surf_aq300_1k.lgi",
    "content": "| Input | Output | — | — |2_surf_mid_grid.inp|6_surf_aq300_1k.inp| . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#6_surf_aq300_1klgi",
    "relUrl": "/07_pseudoNorthPond.html#6_surf_aq300_1klgi"
  },"49": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Construct a volume that represents a 900 m thick aquifer section directly beneath the region representing North Pond. Lines 2 - 4 . Read in 2_surf_mid_grid.inp to mesh object mo and subtract 100m from all z coordinates. Lines 6 - 8 . Extrude mo surface to a volume mo_long that goes from 100 - 1000m below 2_surf_mid_grid.inp surface representing local North Pond bathymetry. Lines 10 - 13 . Convert the volume from hexagonal elements, mo_long, to tetrahedral elements, mo_tet, and check the quality of that conversion. Lines 15 - 17 . Dump mo_tet to file 6_surf_aq300_1k.inp . File link: . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#overview-5",
    "relUrl": "/07_pseudoNorthPond.html#overview-5"
  },"50": {
    "doc": "Pseudo code: North Pond",
    "title": "7_surf_filt.lgi",
    "content": "| Input | Output | — | — |1_surf_domain.inp|7_surf_filt_aq100.inp||7_surf_filt_aq300.inp||7_surf_filt_aq600.inp||7_surf_filt_aq1k.inp| . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#7_surf_filtlgi",
    "relUrl": "/07_pseudoNorthPond.html#7_surf_filtlgi"
  },"51": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Construct four surfaces at -100, -300,-600, and -1000m at the extent of the entire domain. Line 1 . Read in 7_surf_filt.lgi to mesh object mo . Lines 4 - 7 . Create copies of mo to : . | mo_aq100 | mo_aq300 | mo_aq600 | mo_aq1k Lines 12 - 15 . Subtract 100, 300, 600, and 1000m from the z coordinates of the copied mesh objects respectively and check the quality of those objects . Lines 20 - 25 . Dump mesh objects to files: . | mo_aq100 to 7_surf_filt_aq100.inp | mo_aq300 to 7_surf_filt_aq300.inp | mo_aq600 to 7_surf_filt_aq600.inp | mo_aq1k to 7_surf_filt_aq1k.inp File link: . | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#overview-6",
    "relUrl": "/07_pseudoNorthPond.html#overview-6"
  },"52": {
    "doc": "Pseudo code: North Pond",
    "title": "8_driver_high_resolution_clipped.lgi",
    "content": "| Input | Output | — | — |1_surf_domain.inp|8_1_octree_NP.inp|3_surf_mid_sb.inp|8_2_octree_aq100.inp|4_surf_flat_zero.inp|8_3_octree_aq300.inp|5_surf_aq100.inp|8_4_octree_dom.inp|6_surf_aq300_1k.inp|8_4_octree_domaq100.inp|7_surf_filt_aq100.inp|8_5_octree_domaq1k.inp|7_surf_filt_aq300.inp|8_6_octree_domaq300.inp|7_surf_filt_aq600.inp|8_7_octree_domaq600.inp|7_surf_filt_aq1k.inp|8_hex_refine_octree.inp| . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#8_driver_high_resolution_clippedlgi",
    "relUrl": "/07_pseudoNorthPond.html#8_driver_high_resolution_clippedlgi"
  },"53": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "This file is the key file in building the domain. First, we read in all the surfaces created in the previous files. Next, the subroutine refine_object.mlgi is called to perform octree refinement along the elements intersected with the surfaces called and files are created for each of those refinement iterations. The final file with refinements along all desired surfaces is dumped to 8_hex_refine_octree.inp . Lines 1 - 14 . Define xmin, ymin, zmin = -24000,-40000, -6000 to xmax, ymax, zmax = 16000,55000,1500 and number of points in x,y,z = 41, 96,11. This sets the initial resolution at 1000m elements in x,y and 750m in z. Create the mesh object mo_hex for refinement. Lines 17 - 25 . Read in surfaces: . | 1_surf_domain.inp = domain | 4_surf_flat_zero.inp = sf_zero | 5_surf_aq100.inp = aq100 | 6_surf_aq300_1k.inp =aq300_1k | 3_surf_mid_sb.inp = mo_sb | 7_surf_filt_aq100.inp = domain_aq100 | 7_surf_filt_aq1k.inp = domain_aq1k | 7_surf_filt_aq600.inp = domain_aq600 | 7_surf_filt_aq300.inp = domain_aq300 Line 28 . Define the mesh object mo_hex as the object to perform octree refinement on . Lines 32 - 36 . This series of lines performs the octree refinement and will be performed many times in this file. The flow of these lines are: . | Line 32: Define the mesh object to refine with. Here is mo_sb | Line 33: Perform octree refinement via the subroutine refine_object.mlgi | Line 34: Dump the refined object to a file. Here 8_1_octree_NP.inp | Line 36: Check the quality of the refinement. | . Henceforth, this series of steps will be denoted by: Refine {name of mesh object} - File: {Output file} . Lines 40 - 43 . Refine aq100 - File: 8_2_octree_aq100.inp . Lines 47 - 52 . Refine x2 aq300_1k - File: 8_3_octree_aq300.inp . Lines 57 - 60 . Refine x2 domain - File: 8_4_octree_dom.inp . Lines 64 - 75 . Refine domain_aq100 - File: 8_4_octree_domaq100.inp . This refinement has a few additional steps outside the subroutine but before dumping the mesh object. | Line 68: Create a mesh object attribute named in_inter that contains the intersection of the mesh object being refined and mesh object being used to refine in this step | Line 69: Create an element set named erefine1 based on where in_inter is greater than 0 (i.e. where the meshes intersect) | Line 70: Create an element set named num_ref1 based on elements that have been refined less than 2 times. | Line 71: Create an element set named combined1 that is the union of elements from erefine1 and num_ref1 | Line 72: Refine the element set combined1 | . These lines are very similar to the subroutine refine_object.mlgi with the caveat that we are also imposing an additional condition that we only want to refine elements that have 1 level of refinement. This ensures that we are not over-refining elements creating a computationally intensive simulation grid. Henceforth, we will refer to this process as itet-refine . Lines 79 - 91 . Refine domain_aq1k - File: 8_5_octree_domaq1k.inp plus itet-refine . Lines 96 - 108 . Refine domain_aq300 - File: 8_6_octree_domaq300.inp plus itet-refine . Lines 112 - 126 . Refine domain_aq600 - File: 8_7_octree_domaq600.inp plus itet-refine . Lines 128 - 142 . Read in surface 2_surf_mid_grid.inp to mesh object mid_grid. Perform a itet-refine on elements with less than 4 refinements (itetlev &lt; 4). Line 144 . Reset all elements to color 7 . Lines 146 - 151 . Dump mo_hex to 8_hex_refine_octree.inp . File link: . | Input | Output |   | . | refine_object.mlgi | {Element to be refined} | {Refining element} | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#overview-7",
    "relUrl": "/07_pseudoNorthPond.html#overview-7"
  },"54": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Subroutine used to perform octree refinement of a mesh object along a specified surface or volume . Lines 1 - 2 . Clear any variables from previous use of subroutine . Line 4 . Create a mesh object attribute named if_inter that contains the intersection of the mesh object being refined and the mesh object being used to refine in this step. These are defined outside the subroutine . Line 5 . Create an element set named erefine based on where if_inter is greater than 0 (i.e. where the meshes intersect) . Line 6 . The selected set, erefine, is refined. File link: . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#overview-8",
    "relUrl": "/07_pseudoNorthPond.html#overview-8"
  },"55": {
    "doc": "Pseudo code: North Pond",
    "title": "9_surf_north_pond_seafloor.lgi",
    "content": "| Input | Output |— | — |3_middle_sb.csv|9_surf_north_pond_seafloor.inp| . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#9_surf_north_pond_seafloorlgi",
    "relUrl": "/07_pseudoNorthPond.html#9_surf_north_pond_seafloorlgi"
  },"56": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Make a surface corresponding to x,y coordinates of North Pond sediment with z coordinates = 0 . Lines 4 - 8 . Create triplane mesh object sedbase. Read in 3_middle_sb.csv as the x,y,z coordinates of sedbase. Set z-coordinates = 0 and connect points. Lines 11 - 15 . Reset all material and color properties associated with sedbase . Lines 19 - 21 . Dump mesh object sedbase to 9_surf_north_pond_seafloor.inp . File link: . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#overview-9",
    "relUrl": "/07_pseudoNorthPond.html#overview-9"
  },"57": {
    "doc": "Pseudo code: North Pond",
    "title": "10_surf_aq_volumes.lgi",
    "content": "|Input | Output |— | — |2_surf_mid_grid.inp|10_surf_filt_mid_grid_aq100.inp|||10_surf_filt_mid_grid_aq300.inp|||10_surf_filt_mid_grid_aq600.inp|||10_surf_filt_mid_grid_aq1k.inp| . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#10_surf_aq_volumeslgi",
    "relUrl": "/07_pseudoNorthPond.html#10_surf_aq_volumeslgi"
  },"58": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Construct volumes corresponding to the aquifer units beneath North Pond and the adjacent region. Line 2 . Read in 2_surf_mid_grid.inp as mesh object mo . Lines 5 - 11 . Create copies of mesh object mo. Check quality and status. Lines 13 - 28 . Create volumes corresponding to aquifer layers beneath North Pond. Example syntax is: . | Line 13 - Subtract 100m from z-coordinate of mesh object mo_aq100 | Line 14 - Extrude mo_aq100 in the positive z-coordinate direction 100m and name mo_aq100long | . Repeat these steps for layers mo_aq300long (100m - 300m below mo), mo_aq600long (300m - 600m below mo), and mo_aq1klong (600m - 1000m below mo). Check status and quality of volumes. Lines 30 - 33 . Set attribute icr for volumes . Lines 35 - 38 . Dump mesh objects to files: . | mo_aq100long to 13_surf_filt_mid_grid_aq100.inp | mo_aq300long to 13_surf_filt_mid_grid_aq300.inp | mo_aq600long to 13_surf_filt_mid_grid_aq600.inp | mo_aq1klong to 13_surf_filt_mid_grid_aq1k.inp File link: . | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#overview-10",
    "relUrl": "/07_pseudoNorthPond.html#overview-10"
  },"59": {
    "doc": "Pseudo code: North Pond",
    "title": "11_region_set.lgi",
    "content": "| Input | Output | Filename | Input | Output | — | — | — |8_hex_refine_octree.inp|11_hex_refine_octree.inp|1_surf_domain.inp||4_surf_flat_zero.inp||7_surf_filt_aq100.inp||7_surf_filt_aq300.inp||7_surf_filt_aq600.inp||7_surf_filt_aq1k.inp||3_surf_mid_sb.inp||9_surf_north_pond_seafloor.inp||10_surf_filt_mid_grid_aq100.inp||10_surf_filt_mid_grid_aq300.inp||10_surf_filt_mid_grid_aq600.inp||10_surf_filt_mid_grid_aq1k.inp|| . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#11_region_setlgi",
    "relUrl": "/07_pseudoNorthPond.html#11_region_setlgi"
  },"60": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Read in previously made surfaces and set regions corresponding to layered seafloor units . Lines 1 - 30 . Read in hexahedral mesh 8_hex_refine_octree.inp as mo_hex . Read in surfaces and convert to sheets surfaces in order to intersect with elements and filter material zones: . | 1_surf_domain.inp = domain | 4_surf_flat_zero.inp = sf_zero | 7_surf_filt_aq100.inp = mo_aq100 | 7_surf_filt_aq300.inp = mo_aq300 | 7_surf_filt_aq600.inp = mo_aq600 | 7_surf_filt_aq1k.inp = mo_aq1k | 3_surf_mid_sb.inp = mo_sb | 9_surf_north_pond_seafloor.inp = np_sea | 10_surf_filt_mid_grid_aq100.inp = mo_aq100b | 10_surf_filt_mid_grid_aq300.inp = mo_aq300b | 10_surf_filt_mid_grid_aq600.inp = mo_aq600b | 10_surf_filt_mid_grid_aq1k.inp = mo_aq1kb | . Lines 33 - 34 . Select the refined simulation domain as the mesh object and attribute itetclr = 11. This attribute is what we will use to define material zones . Lines 37 - 84 . This section details the intersecting of sheets above with the refined mesh object inorder to define individual zones that correspond to geologic units within the grid. The general workflow of this section takes example from Lines 33 - 35: . | Line 37 - Define the region of interest and name it r1 which is less than or equal to the sheet zero and greater than the surface s_sb. (s_sb &lt; r1 ≤ zero) | Line 38 - Define an element set, e_r1, from the region r1. | Line 39 - See the itetclr of mo_hex = 1 | . This process repeats for different conditions until line 81. The layers that correspond to the itetclr set in these lines are: . | 1 - Sediment | 2 - Aquifer layer 0 - 100m | 3 - Aquifer layer 100 - 300m | 4 - Aquifer layer 300 - 600m | 5 - Aquifer layer 600 - 1000m | 6 - Conductive basement | 7 - Aquifer volumne 100m (mo_aq100b) | 8 - Aquifer volumne 300m (mo_aq300b) | 9 - Aquifer volumne 600m (mo_aq600b) | 10 - Aquifer volumne 1km (mo_aq1kb) | . Lines 89 - 97 . Specify conditionals to set itetclr = 1 for all elements above zero and sf sheets. This is done very similarly to lines 27 - 58 and quality of elements is checked. This step makes sure no elements are taken out of the seafloor of North Pond. Line 99 . Dump mesh object mo_hex to file 11_hex_refine_octree.inp . File link: . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#overview-11",
    "relUrl": "/07_pseudoNorthPond.html#overview-11"
  },"61": {
    "doc": "Pseudo code: North Pond",
    "title": "12_remove_top.lgi",
    "content": "| Input | Output |— | — |11_hex_refine_octree.inp|12_tmp_hex_mesh.inp||12_tmp_tet_interp.inp| . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#12_remove_toplgi",
    "relUrl": "/07_pseudoNorthPond.html#12_remove_toplgi"
  },"62": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Translate mesh with hexahedral elements to mesh with tetrahedral elements. Filter and remove domain area above North Pond and bathymetric surface. Translate regions set in 11_region_set.lgi to tetrahedral mesh. Line 1 . Read in hexagonal mesh file 11_hex_refine_octree.inp to mesh object mo_octree . Line 2 . Convert hexagonal mesh mo_octree to “clean” hexagonal mesh mo_hex, and check quality. From lagrit manual: . “Parent elements in octree_mesh will be removed, so only the leaf elements remain. The result will be stored in new_mesh. This is often used to ensure a single valid mesh for other commands or for use outside of LaGriT. The octree attributes itetpar, itetkid, and itetlev will be updated in the new_mesh.” . Line 6 . Dump mo_hex to file 12_tmp_hex_mesh.inp . Line 8 - 14 . Create new tetrahedral mesh object mo_tet and copy points from mo_hex. Set imt and itp attributes as constant for mo_tet and connect points . Lines 18 - 19 . Interpolate the cell colors from mo_hex to mo_tet.(i.e., material zones) . Lines 21 - 22 . Remove all of itetclr = 11 (i.e. region above North Pond and refined bathymetry) and remove any points without connections resulting from the removal. Lines 26 - 27 . Replace the node material (imt) with the corresponding cell color (itetclr) as well as set node type (itp) based on itetclr. Lines 29 - 34 . Check the quality of the mesh. Dump mo_tet to file 12_tmp_tet_interp.inp. File link: . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#overview-12",
    "relUrl": "/07_pseudoNorthPond.html#overview-12"
  },"63": {
    "doc": "Pseudo code: North Pond",
    "title": "13_top_region_set.lgi",
    "content": "| Input | Output |— | — |12_tmp_tet_interp.inp|13_tet_reset_final.inp||{zone files}||{fehm files}| . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#13_top_region_setlgi",
    "relUrl": "/07_pseudoNorthPond.html#13_top_region_setlgi"
  },"64": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Set top region of North Pond to correct for removal of top of domain in 11_price_remove_top.lgi. Reorder and sort nodes within simulation grid . Lines 1 - 4 . Read in 12_tmp_tet_interp.inp as mesh object mo and check status . Line 6 . Dump outside zone numbers to zone files tmp_test_outside_vor.area and tmp_test_outside.zone . Lines 8 - 9 . Define attribute node_num from node numbers from mesh object mo and check status . Lines 11 - 15 . Filter points that lie on the top of the simulation domain given conditionals: . | Line 11 - Find points with “imt” attribute greater than 1 (i.e., points not in conductive basement) name them todos | Line 12 - Find points with “top” attribute greater than 1 (i.e., points belonging to top zone) name them ttop | Line 13 - Find the points that below to both of these point sets, name them filter | Line 14 - Set imt = 2 to filter points in mo | . Check the status and quality of steps above . Lines 19 - 21 . Sort nodes based on the rank of the node number, then x-, y-, and z-coordinate respectively. Then reorder the nodes based on the sorting. Lines 23 - 24 . Dump the mesh object mo to file 13_tet_reset_final.inp . File link: . Pseudo code: General Case Execute Scripts . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/07_pseudoNorthPond.html#overview-13",
    "relUrl": "/07_pseudoNorthPond.html#overview-13"
  },"65": {
    "doc": "Execute Scripts",
    "title": "Execute Scripts",
    "content": ". | Execute Scripts . | Generalized Mesh . | Syntax | . | North Pond . | Syntax | . | . | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/08_executeScripts.html",
    "relUrl": "/08_executeScripts.html"
  },"66": {
    "doc": "Execute Scripts",
    "title": "Generalized Mesh",
    "content": "Syntax . lagrit&lt; 1_create_surface.lgi &amp;&amp; lagrit &lt; 2_refine_domain.lgi &amp;&amp; lagrit &lt; 3_set_region_truncate.lgi . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/08_executeScripts.html#generalized-mesh",
    "relUrl": "/08_executeScripts.html#generalized-mesh"
  },"67": {
    "doc": "Execute Scripts",
    "title": "North Pond",
    "content": "Syntax . lagrit &lt; 1_surf_domain.lgi &amp;&amp; lagrit &lt; 2_surf_mid_grid.lgi &amp;&amp; lagrit &lt; 3_surf_mid_sb.lgi &amp;&amp; lagrit &lt; 4_surf_flat_zero.lgi &amp;&amp; lagrit &lt; 5_surf_aq100.lgi &amp;&amp; lagrit &lt; 6_surf_aq300_1k.lgi &amp;&amp; lagrit &lt; 7_surf_filt.lgi &amp;&amp; lagrit &lt; 8_driver_high_resolution_clipped.lgi &amp;&amp; lagrit &lt; 9_surf_north_pond_seafloor.lgi &amp;&amp; lagrit &lt; 10_surf_aq_volumes.lgi &amp;&amp; lagrit &lt; 11_region_set.lgi &amp;&amp; lagrit &lt; 12_remove_top.lgi &amp;&amp; lagrit &lt; 13_top_region_set.lgi . Pseudo code: North PondHome . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/08_executeScripts.html#north-pond",
    "relUrl": "/08_executeScripts.html#north-pond"
  }
}
