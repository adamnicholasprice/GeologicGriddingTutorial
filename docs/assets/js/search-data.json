{"0": {
    "doc": "Introduction",
    "title": "Geologically Realistic Representations of Seafloor Crustal Relief and Patchy Sediment Cover",
    "content": "Adam N. Price adamnicholasprice@gmail.com . July 2022 . | Introduction . | Data and software requirements . | LaGriT | Paraview (optional) | Data files | . | Document styling, commands, and files . | Document style | Commands | File types | . | Getting started | . | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/01_intro.html#geologically-realistic-representations-of-seafloor-crustal-relief-and-patchy-sediment-cover",
    "relUrl": "/01_intro.html#geologically-realistic-representations-of-seafloor-crustal-relief-and-patchy-sediment-cover"
  },"1": {
    "doc": "Introduction",
    "title": "Introduction",
    "content": "This tutorial is a resource that accompanies a robust set of resources including a publication, psuedo-code, github repository, and data repository for constructing a three-dimensional grid of geologically realistic representations of seafloor crustal relief. The three-dimensional simulation domain described here has been used in multiple publications focusing on the thermal and hydrogeologic regime of coupled fluxes beneath a marine sediment pond (Price et al., 2022; Price et al., in-prep). The tutorial can be broken down into a workflow consisting of 5 main sections: constructing surfaces, constructing a domain, refining the domain, defining and assigning material types to regions, and a general clean-up of the domain. There will be two examples included for each step. One example will use a general case that will introduce the concepts in a simple manner and the other example will be for construction of the North Pond domain. This tutorial will not be an exhaustive tutorial on the functionality of LaGriT as there are many examples that can be found here. Instead, this tutorial will serve as a \"cookbook”&amp;quot”; that allows the user to understand the steps used in construction of this simulation domain using the lessons and approaches explained below. Happy gridding! . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/01_intro.html",
    "relUrl": "/01_intro.html"
  },"2": {
    "doc": "Introduction",
    "title": "Data and software requirements",
    "content": "To complete this tutorial you will need a stable version of LaGriT (version) and optionally Paraview. LaGriT . LaGriT is available at https://github.com/lanl/LaGriT/releases and can be downloaded as a compiled version (preferred) or the source code for compiling. After downloading LaGriT, add the file to a location within your path, and modify the file permissions to executable. Paraview (optional) . Paraview is a powerful visualization platform used for the primary grid viewer in this tutorial. Graphics here will be provided inline so there is no need to download for the purpose of this tutorial but it is recommended to explore the full functionality of this workflow. Paraview can be downloaded athttps://www.paraview.org/download/ . Data files . This tutorial utilizes scripts and data files from a github repository that can be found at https://github.com/adamnicholasprice/GeologicGriddingData. This repository can be cloned via the command line or downloaded directly from the github website. There are four directories: . • GeneralLaGriT - LaGriT scripts and csv surfaces for building the general grid case . • GeneralScene - Paraview scene files for general grid case used in this tutorial . • NorthPondLaGriT - LaGriT scripts and csv surfaces for building the North Pond grid case . • NorthPondScene - Paraview scene files for North Pond grid case used in this tutorial . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/01_intro.html#data-and-software-requirements",
    "relUrl": "/01_intro.html#data-and-software-requirements"
  },"3": {
    "doc": "Introduction",
    "title": "Document styling, commands, and files",
    "content": "Document style . Throughout the document italicized words willdenote either a file name or a variable within LaGrit. Code blocks will be denoted by the following style: . Code here # Comments will be denoted with an octothorpe (pound sign) . Commands . In lieu of repeating this code chunk in each of the following steps in the tutorial, any LaGriT input files (.lgi) that are run in the tutorial are done so by executing the following command in the command line: . lagrit &lt; filename . This will be denoted with the phrase execute filename.lgi in LaGriT. Steps within the tutorial will be broken down by LaGriT file and have necessary inputs and outputs specified as such: . | Filename | Input | Output | . | *filename.lgi | inputFilename | outputFilename | . File types . | Extension | Filetype | Purpose | . | _ *.lgi | LaGriT control file | LaGriT input control file, specifies mesh generation. | . | _ *.mlgi | LaGriT control file | LaGriT input control file used to specify a subroutine within *.lgi file. | . | _ *.inp | AVS UCD (Unstructured Cell Data) file | Created by LaGriT and contains information about mesh objects. Can be opened in Paraview to visualize data. | . | _ *.zone, *.area, *.stor, *.fehmn _ | FEHM files | LaGriT output files that are of general use but are specifically designed for theFEHM porous flow and transport code | . | _ outx3dgen | LaGriT output file | Output file containing commands and output from commands executed in LaGriT (overwritten every time LaGriT command is called) | . | _ legx3dgen | LaGriT log file | Log file containing commands executed in LaGriT (overwritten every time LaGriT command is called) | . | _ *.csv | Text file (comma separated values) | In this tutorial, these are text files containing coordinates in meters for surfaces. Columns are x, y, z coordinates respectively. | . ## . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/01_intro.html#document-styling-commands-and-files",
    "relUrl": "/01_intro.html#document-styling-commands-and-files"
  },"4": {
    "doc": "Introduction",
    "title": "Getting started",
    "content": "The first step in starting this tutorial is making sure that LaGriT is executable within the working directory of this tutorial and ensuring all needed materials have been synced from github. The directory structure should be: . GeologicGriddingData/ ├── GeneralLaGriT │ ├── 1\\_create\\_surface.lgi │ ├── 2\\_refine\\_domain.lgi │ ├── 3\\_set\\_region\\_truncate.lgi │ ├── refine\\_object.mlgi │ └── surface └── NorthPondLaGriT ├── 10\\_price\\_region\\_set.lgi ├── 11\\_price\\_remove\\_top.lgi ├── 12\\_price\\_top\\_region\\_set.lgi ├── 13\\_price\\_surf\\_aq300\\_bubbles.lgi ├── 14\\_price\\_aq300\\_set.lgi ├── 1\\_price\\_surf\\_domain.lgi ├── 2\\_middle\\_grid.csv ├── 2\\_price\\_surf\\_mid\\_grid.lgi ├── 3\\_middle\\_sb.csv ├── 3\\_price\\_surf\\_mid\\_sb.lgi ├── 4\\_price\\_surf\\_flat\\_zero.lgi ├── 5\\_price\\_surf\\_aq100.lgi ├── 6\\_price\\_surf\\_aq300\\_1k.lgi ├── 7\\_price\\_surf\\_filt.lgi ├── 8\\_price\\_driver\\_high\\_resolution\\_clipped.lgi ├── 9\\_price\\_surf\\_north\\_pond\\_seafloor.lgi └── function6 . Constructing refining surfaces . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/01_intro.html#getting-started",
    "relUrl": "/01_intro.html#getting-started"
  },"5": {
    "doc": "Constructing refining surfaces",
    "title": "Surfaces",
    "content": ". | Surfaces . | Generalized Mesh . | Overview | Steps | Figures . | Figure 1: Interactive figure is made using the file 1_surface.inp in a program called Kitware Glance which is very useful for sharing and visualizing Paraview data. The surface is outlined by the eventual domain and shows the extent and relief of our initial surface. | Figure 2: All the surfaces output from 1_surface.inp. Surfaces represent the upper most topography, layers at 200 and 800m below surface, and a surface at 0m. These surfaces will surface as boundaries for refinement as well as assigning materials to the simulation domain. | . | . | North Pond . | Overview | Overview | Overview | Overview | Overview | Overview | . | . | . The first step in the construction of a simulation domain is to construct surfaces that represent geologically realistic layers. These surfaces will define boundaries that allow assignment of specific material properties and act as surfaces to refine the simulation domain. Surfaces can be constructed in LaGriT or in an outside programming language such as R, Python, or Matlab and brought into LaGritT. In both cases in this tutorial, surfaces were constructed outside of LaGriT and brought in to define mesh objects. The general steps to construct surfaces are: . | Save mesh coordinates (x,y,z) into a .csv file . | Create mesh object that has coordinate system (x and y) of desired mesh resolution (have to define if different from .csv file coordinates) . | Connect mesh objects with new coordinates in x and y. | Read in the .csv as a mesh object into LaGriT . | Copy over z-coordinates from mesh in step 4 to connected mesh in step 2 . | . | . This process forces LaGriT to make the “best” connections within an x-y plane to begin with and then the coordinates along the z-axis with relief to be defined, thereby preventing any connections outside the plane. ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/02_surfaces.html#surfaces",
    "relUrl": "/02_surfaces.html#surfaces"
  },"6": {
    "doc": "Constructing refining surfaces",
    "title": "Generalized Mesh",
    "content": "For the general case, there is one control file (.lgi), one input file (surface.lgi), and four output surfaces. | Filename | Input | Output | . | 1_create_surface.lgi | surface.csv | 1_surface_aq200.inp | . |   |   | 1_surface_aq800.inp | . |   |   | 1_surface_zero.inp | . |   |   | 1_surface.inp | . Overview . For the general case, surface.csv is a continuous function; $ z(x,y) = -cos(x) - cos(y) $ that replicates, but generalizes topography and structures observed in seafloor bathymetric data. The maxima of the function would be representative of seamounts, whereas the minima would represent sediment ponds, both common features on the seafloor. These relationships may be difficult to observe but they will become clear throughout the tutorial. Steps . First, navigate to the directory for the general case (i.e. GeologicGriddingData/GeneralLaGriT) . Next, execute the .lgi file . lagrit &lt; 1_create_surface.lgi . Figures . Figure 1: Interactive figure is made using the file 1_surface.inp in a program called Kitware Glance which is very useful for sharing and visualizing Paraview data. The surface is outlined by the eventual domain and shows the extent and relief of our initial surface. Figure 2: All the surfaces output from 1_surface.inp. Surfaces represent the upper most topography, layers at 200 and 800m below surface, and a surface at 0m. These surfaces will surface as boundaries for refinement as well as assigning materials to the simulation domain. ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/02_surfaces.html#generalized-mesh",
    "relUrl": "/02_surfaces.html#generalized-mesh"
  },"7": {
    "doc": "Constructing refining surfaces",
    "title": "North Pond",
    "content": "For the North Pond case, the first seven .lgi files define surfaces. The initial surface that represents the regional bathymetry of North Pond, was constructed outside of LaGriT in R. The details of sampling data for surface construction can be found in the supplemental information Price et al., 2022. From samples of bathymetric data surrounding North Pond, a continuous function that best describes the region is: \\(z(x,y)= \\frac{1}{t}\\arctan\\left (\\frac{t*\\sin(x)}{1-t*\\cos(x)}\\right) - \\frac{1}{t}\\arctan\\left (\\frac{t*\\sin(y)}{1-t*\\cos(y)}\\right)\\) where t determines the “tilt” of the function, x is the strike-normal distance, and y is the strike-parallel distance. | Filename | Input | Output | . | 1_price_surf_domain.lgi | function6.csv | 1_surf_domain.inp | . Overview . Create mesh object surface representing North Pond bathymetry using function6.csv . | Filename | Input | Output | . | 2_price_surf_mid_grid.lgi | 2_middle_grid.csv | 2_surf_mid_grid.inp | . Overview . Create mesh object surface from trimmed area of interest created from truncated bathymetric surface (2_middle_grid.csv) representing North Pond and immediately adjacent region. | Filename | Input | Output | . | 3_price_surf_mid_sb.lgi | 3_middle_sb.csv | 3_surf_mid_sb.inp | . Overview . Create mesh object surface from trimmed area of interest created from truncated bathymetric surface (3_middle_sb.csv) representing sediment / basement interface beneath North Pond. | Filename | Input | Output | . | 4_price_surf_flat_zero.lgi | None | 4_surf_flat_zero.inp | . Overview . Construct a flat surface at z = 0 at the same spatial extent as 2_middle_grid.csv. | Filename | Input | Output | . | 5_price_surf_aq100.lgi | 3_surf_mid_sb.inp | 5_surf_aq100.inp | . Overview . Construct a volume that represents a 100m thick aquifer section directly beneath North Pond. | Filename | Input | Output | . | 6_price_surf_aq300_1k.lgi | 2_surf_mid_grid.inp | 6_surf_aq300_1k.inp | . Overview . Construct a volume that represents a 900 m thick aquifer section directly beneath the region representing North Pond. | Filename | Input | Output | . | 7_price_surf_filt.lgi | 1_surf_domain.inp | 7_surf_filt_aq100.inp | . |   |   | 7_surf_filt_aq300.inp | . |   |   | 7_surf_filt_aq600.inp | . |   |   | 7_surf_filt_aq1k.inp | . Introduction Constructing and refining domain . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/02_surfaces.html#north-pond",
    "relUrl": "/02_surfaces.html#north-pond"
  },"8": {
    "doc": "Constructing refining surfaces",
    "title": "Constructing refining surfaces",
    "content": " ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/02_surfaces.html",
    "relUrl": "/02_surfaces.html"
  },"9": {
    "doc": "Constructing and refining domain",
    "title": "Constructing and refining domain",
    "content": ". | Constructing and refining domain . | Generalized Mesh . | Overview . | Figures | . | . | North Pond . | Overview . | Figures | . | . | . | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/03_domain.html",
    "relUrl": "/03_domain.html"
  },"10": {
    "doc": "Constructing and refining domain",
    "title": "Generalized Mesh",
    "content": "| Filename | Input | Output | . | 2_refine_domain.lgi | 1_surface_aq200.inp | 2_initial_domain.inp | . |   | 1_surface_aq800.inp | 2_hexRefine_octree.inp | . |   | 1_surface.inp | 2_surface_octree.inp | . |   |   | 2_surfaceAQ200_octree.inp | . |   |   | 2_surfaceAQ800_octree.inp | . Overview . Figures . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/03_domain.html#generalized-mesh",
    "relUrl": "/03_domain.html#generalized-mesh"
  },"11": {
    "doc": "Constructing and refining domain",
    "title": "North Pond",
    "content": "Overview . Figures . Constructing refining surfaces Define regions and assign materials . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/03_domain.html#north-pond",
    "relUrl": "/03_domain.html#north-pond"
  },"12": {
    "doc": "Define regions and assign materials",
    "title": "Define regions and assign materials",
    "content": ". | Define regions and assign materials . | Generalized Mesh . | Overview . | Figures | . | . | North Pond . | Overview . | Figures | . | . | . | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/04_defineRegions.html",
    "relUrl": "/04_defineRegions.html"
  },"13": {
    "doc": "Define regions and assign materials",
    "title": "Generalized Mesh",
    "content": "Overview . Figures . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/04_defineRegions.html#generalized-mesh",
    "relUrl": "/04_defineRegions.html#generalized-mesh"
  },"14": {
    "doc": "Define regions and assign materials",
    "title": "North Pond",
    "content": "Overview . Figures . Constructing and refining domain Cleanup domain, materials, and boundary conditions . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/04_defineRegions.html#north-pond",
    "relUrl": "/04_defineRegions.html#north-pond"
  },"15": {
    "doc": "Cleanup domain, materials, and boundary conditions",
    "title": "Define regions and assign materials",
    "content": ". | Define regions and assign materials . | Generalized Mesh . | Overview . | Figures | . | . | North Pond . | Overview . | Figures | . | . | . | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/05_cleanup.html#define-regions-and-assign-materials",
    "relUrl": "/05_cleanup.html#define-regions-and-assign-materials"
  },"16": {
    "doc": "Cleanup domain, materials, and boundary conditions",
    "title": "Generalized Mesh",
    "content": "Overview . Figures . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/05_cleanup.html#generalized-mesh",
    "relUrl": "/05_cleanup.html#generalized-mesh"
  },"17": {
    "doc": "Cleanup domain, materials, and boundary conditions",
    "title": "North Pond",
    "content": "Overview . Figures . Define regions and assign materials Pseudo code: General case . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/05_cleanup.html#north-pond",
    "relUrl": "/05_cleanup.html#north-pond"
  },"18": {
    "doc": "Cleanup domain, materials, and boundary conditions",
    "title": "Cleanup domain, materials, and boundary conditions",
    "content": " ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/05_cleanup.html",
    "relUrl": "/05_cleanup.html"
  },"19": {
    "doc": "Pseudo code: General case",
    "title": "Pseudo code: General case",
    "content": ". | Pseudo code: General case | . Cleanup domain, materials, and boundary conditions Pseudo code: North Pond . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoGeneral.html",
    "relUrl": "/06_pseudoGeneral.html"
  },"20": {
    "doc": "Pseudo code: North Pond",
    "title": "Pseudo code: North Pond",
    "content": " ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html",
    "relUrl": "/06_pseudoNorthPond.html"
  },"21": {
    "doc": "Pseudo code: North Pond",
    "title": "Abstract",
    "content": "General flow: . Files 1 - 3: reading in files and making reference surfaces . Files 5 - 7: making separate surfaces for refining aquifer layers . File 8: Grid refinement . File 9: Setting seafloor at North Pond . File 10: Setting regions based on surfaces . File 11: Removing the top of the grid, going from hex elements to tet elements . File 12: Set outside zones . File 13: Construct volumes for area of interest to define zones with . File 14: Set material zones for area of interest and dump FEHM files . | Overview . | Lines 1 - 11 | Lines 14 - 18 | Lines 23-24 | Line 28 | Lines 32 - 37 | Lines 39 - 41 | File link: | . | Overview . | Lines 4 - 8 | Lines 10 - 14 | Lines 17 - 22 | Lines 26 - 28 | File link: | . | Overview . | Lines 4 - 8 | Lines 10 - 13 | Lines 17 - 22 | Lines 26 - 28 | File link: | . | Overview . | Lines 2 - 5 | Lines 7 - 9 | Lines 11 - 15 | Lines 17 - 18 | Lines 20 - 22 | File link: | . | Overview . | Line 1 | Line 4 | Line 6 | Lines 9 - 11 | Lines 13 - 15 | File link: | . | Overview . | Lines 2 - 4 | Lines 6 - 8 | Lines 10 - 13 | Lines 15 - 17 | File link: | . | Overview . | Line 1 | Lines 4 - 7 | Lines 12 - 15 | Lines 20 - 25 | File link: | . | Overview . | Lines 1 - 14 | Lines 17 - 25 | Line 28 | Lines 32 - 36 | Lines 40 - 43 | Lines 47 - 52 | Lines 57 - 60 | Lines 64 - 75 | Lines 79 - 91 | Lines 96 - 108 | Lines 112 - 126 | Lines 128 - 142 | Line 144 | Lines 146 - 151 | File link: | . | Overview . | Lines 1 - 2 | Line 4 | Line 5 | Line 6 | File link: | . | Overview . | Lines 4 - 8 | Lines 11 - 15 | Lines 19 - 21 | File link: | . | Overview . | Lines 1 - 10 | Lines 12 - 19 | Lines 22 - 24 | Lines 27 - 58 | Lines 62 - 70 | Lines 72 - 75 | File link: | . | Overview . | Line 1 | Lines 2 - 4 | Line 6 | Line 8 - 14 | Lines 18 - 19 | Lines 21 - 22 | Lines 26 - 27 | Lines 29 - 34 | File link: | . | Overview . | Lines 1 - 4 | Line 6 | Lines 8 - 9 | Lines 11 - 15 | Lines 19 - 21 | Lines 23 - 24 | File link: | . | Overview . | Line 2 | Lines 5 - 11 | Lines 13 - 28 | Lines 30 - 35 | File link: | . | Overview . | Lines 1 | Lines 4 - 13 | Line 16 | Lines 19 - 33 | Lines 37 - 40 | Lines 43 - 44 | File link: | . | Files: . | Function6 | 2_mid_grid.csv | 3_middle_sb.csv | . | . | Filename | Input | Output | . | 1_price_surf_domain.lgi | function6 | 1_surf_domain.inp | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#abstract",
    "relUrl": "/06_pseudoNorthPond.html#abstract"
  },"22": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Create mesh object for bathymetric surface. Lines 1 - 11 . Assign coordinate system in meters from xmin, ymin, zmin = -30000,-75000, -5000 to xmax, ymax, zmax = 30000,75000,0 and number of points in x,y,z = 301, 301,6 to determine spacing. Lines 14 - 18 . Create a mesh object surface, mo_tri, that is the above x,y dimensions with singular z value (2D plane). Setting z coordinates to zero before connecting allows defining an explicit x,y coordinate system and connecting that surface without producing oddly shaped elements. Lines 23-24 . Creates mesh object (sedbase) from the topography function from R (function6) . Line 28 . Assign z coordinates from sedbase to connected triplane mesh object mo_tri . Lines 32 - 37 . Reset property values of mesh object to insure all the same value . Lines 39 - 41 . Dump surface to file 1_surf_domain.inp . File link: . | Filename | Input | Output | . | 2_price_surf_mid_grid.lgi | 2_middle_grid.csv | 2_surf_mid_grid.inp | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#overview",
    "relUrl": "/06_pseudoNorthPond.html#overview"
  },"23": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Create mesh object from trimmed area of interest created from truncated bathymetric surface representing North Pond and immediately adjacent region created outside of LaGriT . Lines 4 - 8 . Read in 2_middle_grid.csv, create a mesh object (sedbase), set z coordinates to zero, then connect. Setting z coordinates to zero before connecting allows defining an explicit x,y coordinate system and connecting that surface without producing oddly shaped elements. Lines 10 - 14 . Read in 2_middle_grid.csv, create a separate mesh object temp, then copy z coordinates from temp to connected surface sedbase . Lines 17 - 22 . Reset property values of mesh object to insure all the same value . Lines 26 - 28 . Dump surface to file 2_surf_mid_grid.inp . File link: . | Filename | Input | Output | . | 3_price_surf_mid_sb.lgi | 3_middle_sb.csv | 3_surf_mid_sb.inp | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#overview-1",
    "relUrl": "/06_pseudoNorthPond.html#overview-1"
  },"24": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Create mesh object from trimmed area of interest created from truncated bathymetric surface representing sediment = basement interface beneath North Pond created outside of LaGriT . Lines 4 - 8 . Read in 3_middle_sb.csv, create a mesh object (sedbase), set z coordinates to zero, then connect. Setting z coordinates to zero before connecting allows defining an explicit x,y coordinate system and connecting that surface without producing oddly shaped elements. Lines 10 - 13 . Read in 3_middle_sb.csv, create a separate mesh object (temp), then copy z coordinates from temp to connected surface sedbase . Lines 17 - 22 . Reset property values of mesh object to insure all the same value . Lines 26 - 28 . Dump surface to file 3_surf_mid_sb.inp . File link: . | Filename | Input | Output | . | 4_price_surf_flat_zero.lgi | None | 4_surf_flat_zero.inp | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#overview-2",
    "relUrl": "/06_pseudoNorthPond.html#overview-2"
  },"25": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Construct a flat surface at z = 0 at the same spatial extent as 2_middle_grid.csv. Lines 2 - 5 . Specify extent of surface xmin, ymin = -15000, -6000 to xmax, ymax = 4600, 28500 . Lines 7 - 9 . Specify number of x,y points (resolution) at 2 each . Lines 11 - 15 . Create mesh object mo_tri, create points on that mesh object, and connect . Lines 17 - 18 . Check quality of connections for oddly shaped elements . Lines 20 - 22 . Dump mesh object mo_tri to file 4_surf_flat_zero.inp . File link: . | Filename | Input | Output | . | 5_price_surf_aq100.lgi | 3_surf_mid_sb.inp | 5_surf_aq100.inp | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#overview-3",
    "relUrl": "/06_pseudoNorthPond.html#overview-3"
  },"26": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Construct a volume that represents a 100m thick aquifer section directly beneath North Pond. Line 1 . Read in 3_surf_mid_sb.inp to mesh object mid_sb . Line 4 . Extrude a volume that goes from sediment = basement interface to 100m below that interface. Line 6 . Check the quality of the extrude . Lines 9 - 11 . Convert the volume from hexagonal elements to tetrahedral elements and check the quality of that conversion . Lines 13 - 15 . Dump mo_tet to file 5_surf_aq100.inp . File link: . | Filename | Input | Output | . | 6_price_surf_aq300_1k.lgi | 2_surf_mid_grid.inp | 6_surf_aq300_1k.inp | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#overview-4",
    "relUrl": "/06_pseudoNorthPond.html#overview-4"
  },"27": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Construct a volume that represents a 900 m thick aquifer section directly beneath the region representing North Pond. Lines 2 - 4 . Read in 2_surf_mid_grid.inp to mesh object mo and subtract 100m from all z coordinates. Lines 6 - 8 . Extrude mo surface to a volume mo_long that goes from 100 - 1000m below 2_surf_mid_grid.inp surface representing local North Pond bathymetry. Lines 10 - 13 . Convert the volume from hexagonal elements, mo_long, to tetrahedral elements, mo_tet, and check the quality of that conversion. Lines 15 - 17 . Dump mo_tet to file 6_surf_aq300_1k.inp . File link: . | Filename | Input | Output | . | 7_price_surf_filt.lgi | 1_surf_domain.inp | 7_surf_filt_aq100.inp | . |   |   | 7_surf_filt_aq300.inp | . |   |   | 7_surf_filt_aq600.inp | . |   |   | 7_surf_filt_aq1k.inp | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#overview-5",
    "relUrl": "/06_pseudoNorthPond.html#overview-5"
  },"28": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Construct four surfaces at -100, -300,-600, and -1000m at the extent of the entire domain. Line 1 . Read in 7_price_surf_filt.lgi to mesh object mo . Lines 4 - 7 . Create copies of mo to : . | mo_aq100 | mo_aq300 | mo_aq600 | mo_aq1k Lines 12 - 15 . Subtract 100, 300, 600, and 1000m from the z coordinates of the copied mesh objects respectively and check the quality of those objects . Lines 20 - 25 . Dump mesh objects to files: . | mo_aq100 to 7_surf_filt_aq100.inp | mo_aq300 to 7_surf_filt_aq300.inp | mo_aq600 to 7_surf_filt_aq600.inp | mo_aq1k to 7_surf_filt_aq1k.inp File link: . | . | Filename | Input | Output | . | 8_price_driver_high_resolution_clipped.lgi | 1_surf_domain.inp | 8_1_octree_NP.inp | . |   | 3_surf_mid_sb.inp | 8_2_octree_aq100.inp | . |   | 4_surf_flat_zero.inp | 8_3_octree_aq300.inp | . |   | 5_surf_aq100.inp | 8_4_octree_dom.inp | . |   | 6_surf_aq300_1k.inp | 8_4_octree_domaq100.inp | . |   | 7_surf_filt_aq100.inp | 8_5_octree_domaq1k.inp | . |   | 7_surf_filt_aq300.inp | 8_6_octree_domaq300.inp | . |   | 7_surf_filt_aq600.inp | 8_7_octree_domaq600.inp | . |   | 7_surf_filt_aq1k.inp | 8_hex_refine_octree.inp | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#overview-6",
    "relUrl": "/06_pseudoNorthPond.html#overview-6"
  },"29": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "This file is the key file in building the domain. First, we read in all the surfaces created in the previous files. Next, the subroutine refine_object.mlgi is called to perform octree refinement along the elements intersected with the surfaces called and files are created for each of those refinement iterations. The final file with refinements along all desired surfaces is dumped to 8_hex_refine_octree.inp . Lines 1 - 14 . Define xmin, ymin, zmin = -24000,-40000, -6000 to xmax, ymax, zmax = 16000,55000,1500 and number of points in x,y,z = 41, 96,11. This sets the initial resolution at 1000m elements in x,y,z. Create the mesh object mo_hex for refinement. Lines 17 - 25 . Read in surfaces: . | 1_surf_domain.inp = domain | 4_surf_flat_zero.inp = sf_zero | 5_surf_aq100.inp = aq100 | 6_surf_aq300_1k.inp =aq300_1k | 3_surf_mid_sb.inp = mo_sb | 7_surf_filt_aq100.inp = domain_aq100 | 7_surf_filt_aq1k.inp = domain_aq1k | 7_surf_filt_aq600.inp = domain_aq600 | 7_surf_filt_aq300.inp = domain_aq300 Line 28 . Define the mesh object mo_hex as the object to perform octree refinement on . Lines 32 - 36 . This series of lines performs the octree refinement and will be performed many times in this file. The flow of these lines are: . | Line 32: Define the mesh object to refine with. Here is mo_sb | Line 33: Perform octree refinement via the subroutine refine_object.mlgi | Line 34: Dump the refined object to a file. Here 8_1_octree_NP.inp | Line 36: Check the quality of the refinement. | . Henceforth, this series of steps will be denoted by: Refine {name of mesh object} - File: {Output file} . Lines 40 - 43 . Refine aq100 - File: 8_2_octree_aq100.inp . Lines 47 - 52 . Refine x2 aq300_1k - File: 8_3_octree_aq300.inp . Lines 57 - 60 . Refine x2 domain - File: 8_4_octree_dom.inp . Lines 64 - 75 . Refine domain_aq100 - File: 8_4_octree_domaq100.inp . This refinement has a few additional steps outside the subroutine but before dumping the mesh object. | Line 68: Create a mesh object attribute named in_inter that contains the intersection of the mesh object being refined and mesh object being used to refine in this step | Line 69: Create an element set named erefine1 based on where in_inter is greater than 0 (i.e. where the meshes intersect) | Line 70: Create an element set named num_ref1 based on elements that have been refined less than 2 times. | Line 71: Create an element set named combined1 that is the union of elements from erefine1 and num_ref1 | Line 72: Refine the element set combined1 | . These lines are very similar to the subroutine refine_object.mlgi with the caveat that we are also imposing an additional condition that we only want to refine elements that have 1 level of refinement. This ensures that we are not over-refining elements creating a computationally intensive simulation grid. Henceforth, we will refer to this process as itet-refine . Lines 79 - 91 . Refine domain_aq1k - File: 8_5_octree_domaq1k.inp plus itet-refine . Lines 96 - 108 . Refine domain_aq300 - File: 8_6_octree_domaq300.inp plus itet-refine . Lines 112 - 126 . Refine domain_aq600 - File: 8_7_octree_domaq600.inp plus itet-refine . Lines 128 - 142 . Read in surface 2_surf_mid_grid.inp to mesh object mid_grid. Perform a itet-refine on elements with less than 4 refinements (itetlev &lt; 4). Line 144 . Reset all elements to color 7 . Lines 146 - 151 . Dump mo_hex to 8_hex_refine_octree.inp . File link: . | Filename | Input | Output | . | refine_object.mlgi | {Element to be refined} | {Refining element} | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#overview-7",
    "relUrl": "/06_pseudoNorthPond.html#overview-7"
  },"30": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Subroutine used to perform octree refinement of a mesh object along a specified surface or volume . Lines 1 - 2 . Clear any variables from previous use of subroutine . Line 4 . Create a mesh object attribute named if_inter that contains the intersection of the mesh object being refined and the mesh object being used to refine in this step. These are defined outside the subroutine . Line 5 . Create an element set named erefine based on where if_inter is greater than 0 (i.e. where the meshes intersect) . Line 6 . The selected set, erefine, is refined. File link: . | Filename | Input | Output | . | 9_price_surf_north_pond_seafloor.lgi | 3_middle_sb.csv | 9_surf_north_pond_seafloor.inp | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#overview-8",
    "relUrl": "/06_pseudoNorthPond.html#overview-8"
  },"31": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Make a surface corresponding to x,y coordinates of North Pond sediment with z coordinates = 0 . Lines 4 - 8 . Create triplane mesh object sedbase. Read in 3_middle_sb.csv as the x,y,z coordinates of sedbase. Set z-coordinates = 0 and connect points. Lines 11 - 15 . Reset all material and color properties associated with sedbase . Lines 19 - 21 . Dump mesh object sedbase to 9_surf_north_pond_seafloor.inp . File link: . | Filename | Input | Output | . | 10_price_region_set.lgi | 3_middle_sb.csv | 10_hex_refine_octree_pre.inp | . |   | 1_surf_domain.inp | 10_hex_refine_octree.inp | . |   | 4_surf_flat_zero.inp |   | . |   | 7_surf_filt_aq100.inp |   | . |   | 7_surf_filt_aq300.inp |   | . |   | 7_surf_filt_aq600.inp |   | . |   | 7_surf_filt_aq1k.inp |   | . |   | 3_surf_mid_sb.inp |   | . |   | 9_surf_north_pond_seafloor.inp |   | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#overview-9",
    "relUrl": "/06_pseudoNorthPond.html#overview-9"
  },"32": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Read in previously made surfaces and set regions corresponding to layered seafloor units . Lines 1 - 10 . Read in surfaces: . | 1_surf_domain.inp = domain | 4_surf_flat_zero.inp = sf_zero | 7_surf_filt_aq100.inp = mo_aq100 | 7_surf_filt_aq300.inp = mo_aq300 | 7_surf_filt_aq600.inp = mo_aq600 | 7_surf_filt_aq1k.inp = mo_aq1k | 3_surf_mid_sb.inp = mo_sb | 9_surf_north_pond_seafloor.inp = np_sea Lines 12 - 19 . Convert mesh objects read in above to sheets in order to intersect with elements and filter for geometry . Lines 22 - 24 . Select the refined simulation domain as the mesh object and reset all itet colors = 7 . Lines 27 - 58 . This section details the intersecting of sheets above with the refined mesh object inorder to define individual zones that correspond to geologic units within the grid. The general workflow of this section takes example from Lines 33 - 35: . | Line 33 - Define the region of interest and name it r1 which is less than or equal to the sheet zero and greater than the surface s_sb. (s_sb &lt; r1 ≤ zero) | Line 34 - Define an eltset, e_r1, from the region r1. | Line 35 - See the itetclr of mo_hex = 1 | . This process repeats for different conditions until line 58. The layers that correspond to the itetclr set in these lines are: . | 1 - Sediment | 2 - Aquifer layer 0 - 100m | 3 - Aquifer layer 100 - 300m | 4 - Aquifer layer 300 - 600m | 5 - Aquifer layer 600 - 1000m | 6 - Conductive basement | 7- Everything else (i.e., the area above itetclr 1 and 2) Lines 62 - 70 . Specify conditionals to set itetclr = 7 for all elements above zero and sf sheets. This is done very similarly to lines 27 - 58 and quality of elements is checked. Lines 72 - 75 . Dump mesh object mo_hex to files 10_hex_refine_octree_pre.inp and 10_hex_refine_octree.inp . File link: . | . | Filename | Input | Output | . | 11_price_remove_top.lgi | 10_hex_refine_octree.inp | 11_tmp_hex_mesh.inp | . |   |   | 11_tmp_tet_interp.inp | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#overview-10",
    "relUrl": "/06_pseudoNorthPond.html#overview-10"
  },"33": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Translate mesh with hexagonal elements to mesh with tetrahedral elements. Filter and remove domain area above North Pond and bathymetric surface. Translate regions set in 10_price_region_set.lgi to tetrahedral mesh. Line 1 . Read in hexagonal mesh file 10_hex_refine_octree.inp to mesh object mo_octree . Lines 2 - 4 . Convert hexagonal mesh mo_octree to “clean” hexagonal mesh mo_hex, and check quality. From lagrit manual: . “Parent elements in octree_mesh will be removed, so only the leaf elements remain. The result will be stored in new_mesh. This is often used to ensure a single valid mesh for other commands or for use outside of LaGriT. The octree attributes itetpar, itetkid, and itetlev will be updated in the new_mesh.” . Line 6 . Dump mo_hex to file 11_tmp_hex_mesh.inp . Line 8 - 14 . Create new tetrahedral mesh object mo_tet and copy points from mo_hex. Set imt and itp attributes as constant for mo_tet and connect points . Lines 18 - 19 . Interpolate the cell colors from mo_hex to mo_tet. Lines 21 - 22 . Remove all of itetclr = 7 (i.e. region above North Pond and bathymetry) and remove any points without connections resulting from the removal. Lines 26 - 27 . Replace the node material (imt) with the corresponding cell color (itetclr) as well as set node type (itp) based on itetclr. Lines 29 - 34 . Check the quality of the mesh. Dump mo_tet to file 11_tmp_tet_interp.inp. File link: . | Filename | Input | Output | . | 12_price_top_region_set.lgi | 11_tmp_tet_interp.inp | 12_tet_reset_final.inp | . |   |   | 12_tet_reset_final.gmv | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#overview-11",
    "relUrl": "/06_pseudoNorthPond.html#overview-11"
  },"34": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Set top region of North Pond to correct for removal of top of domain in 11_price_remove_top.lgi. Reorder and sort nodes within simulation grid . Lines 1 - 4 . Read in 11_tmp_tet_interp.inp as mesh object mo and check status . Line 6 . Dump outside zone numbers to files tmp_test_outside_vor.area and tmp_test_outside.zone . Lines 8 - 9 . Define attribute node_num from node numbers from mesh object mo and check status . Lines 11 - 15 . Filter points that lie on the top of the simulation domain given conditionals: . | Line 11 - Find points with “imt” attribute greater than 1 (i.e., points not in conductive basement) name them todos | Line 12 - Find points with “top” attribute greater than 1 (i.e., points belonging to top zone) name them ttop | Line 13 - Find the points that below to both of these point sets, name them filter | Line 14 - Set imt = 2 to filter points in mo | . Check the status and quality of steps above . Lines 19 - 21 . Sort nodes based on the rank of the node number, then x-, y-, and z-coordinate respectively. Then reorder the nodes based on the sorting. Lines 23 - 24 . Dump the mesh object mo to file 12_tet_reset_final.inp . File link: . | Filename | Input | Output | . | 13_price_surf_aq300_bubbles.lgi | 2_surf_mid_grid.inp | 13_surf_filt_mid_grid_aq100.inp | . |   |   | 13_surf_filt_mid_grid_aq300.inp | . |   |   | 13_surf_filt_mid_grid_aq600.inp | . |   |   | 13_surf_filt_mid_grid_aq1k.inp | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#overview-12",
    "relUrl": "/06_pseudoNorthPond.html#overview-12"
  },"35": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Construct volumes corresponding to the aquifer units beneath North Pond and the adjacent region. Line 2 . Read in 2_surf_mid_grid.inp as mesh object mo . Lines 5 - 11 . Create copies of mesh object mo. Check quality and status. Lines 13 - 28 . Create volumes corresponding to aquifer layers beneath North Pond. Example syntax is: . | Line 13 - Subtract 100m from z-coordinate of mesh object mo_aq100 | Line 14 - Extrude mo_aq100 in the positive z-coordinate direction 100m and name mo_aq100long | . Repeat these steps for layers mo_aq300long (100m - 300m below mo), mo_aq600long (300m - 600m below mo), and mo_aq1klong (600m - 1000m below mo). Check status and quality of volumes. Lines 30 - 35 . Dump mesh objects to files: . | mo_aq100long to 13_surf_filt_mid_grid_aq100.inp | mo_aq300long to 13_surf_filt_mid_grid_aq300.inp | mo_aq600long to 13_surf_filt_mid_grid_aq600.inp | mo_aq1klong to 13_surf_filt_mid_grid_aq1k.inp File link: . | . | Filename | Input | Output | . | 14_price_aq300_set.lgi | 12_tet_reset_final.inp | 14_tet_reset_final.inp | . |   | 13_surf_filt_mid_grid_aq100.inp | 14_tet_reset_final.gmv | . |   | 13_surf_filt_mid_grid_aq300.inp | final_mesh (files) | . |   | 13_surf_filt_mid_grid_aq600.inp |   | . |   | 13_surf_filt_mid_grid_aq1k.inp |   | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#overview-13",
    "relUrl": "/06_pseudoNorthPond.html#overview-13"
  },"36": {
    "doc": "Pseudo code: North Pond",
    "title": "Overview",
    "content": "Set material regions corresponding to aquifer regions beneath North Pond and adjacent region. Lines 1 . Read in 12_tet_reset_final.inp mesh as mesh object mo . Lines 4 - 13 . Read in meshes and define mesh objects: . | 13_surf_filt_mid_grid_aq100.inp to mo_aq100b | 13_surf_filt_mid_grid_aq300.inp to mo_aq300b | 13_surf_filt_mid_grid_aq600.inp to mo_aq600b | 13_surf_filt_mid_grid_aq1k.inp to mo_aq1kb | . Then convert to sheets: . | mo_aq100b to aq100 | mo_aq300b to aq300 | mo_aq600b to aq600 | mo_aq1kb to aq1k Line 16 . Select mo to filter on . Lines 19 - 33 . Filter points that are contained within the regions of the simulation domain given conditionals. Example syntax is: . | . Line 19 - Define region r11 that is less than aq100 . Line 20 - Define pset e_r11 that contains all points within region r11 . Line 21 - Set imt = 8 for all points in e_r11 . Complete this for regions and pointsets for imt = 8, 9, 10. The layers that correspond to the imt set in these lines are: . | 7 - Aquifer layer 0 - 100m in immediate North Pond region | 8 - Aquifer layer 100 - 300m in immediate North Pond region | 9 - Aquifer layer 300 - 600m in immediate North Pond region | 10 - Aquifer layer 600 - 1000m in immediate North Pond region Lines 37 - 40 . Reset all top nodes to imt = 2 in case they were reset in previous lines . Lines 43 - 44 . Dump mo to files 14_tet_reset_final.inp, 14_tet_reset_final.gmv, and FEHM mesh files . File link: . | . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#overview-14",
    "relUrl": "/06_pseudoNorthPond.html#overview-14"
  },"37": {
    "doc": "Pseudo code: North Pond",
    "title": "Files:",
    "content": " ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#files",
    "relUrl": "/06_pseudoNorthPond.html#files"
  },"38": {
    "doc": "Pseudo code: North Pond",
    "title": "Function6",
    "content": "Bathymetric function. ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#function6",
    "relUrl": "/06_pseudoNorthPond.html#function6"
  },"39": {
    "doc": "Pseudo code: North Pond",
    "title": "2_mid_grid.csv",
    "content": "Clipped bathymetry file representing North Pond and surrounding area. Used for high resolution filtering . ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#2_mid_gridcsv",
    "relUrl": "/06_pseudoNorthPond.html#2_mid_gridcsv"
  },"40": {
    "doc": "Pseudo code: North Pond",
    "title": "3_middle_sb.csv",
    "content": "Clipped bathymetry file representing just the sediment = basement interface. ",
    "url": "https://adamnicholasprice.github.io/GeologicGriddingTutorial/06_pseudoNorthPond.html#3_middle_sbcsv",
    "relUrl": "/06_pseudoNorthPond.html#3_middle_sbcsv"
  }
}
